{
  "api/OpenCollar.Extensions.Configuration.ReadOnlyAttribute.html": {
    "href": "api/OpenCollar.Extensions.Configuration.ReadOnlyAttribute.html",
    "title": "Class ReadOnlyAttribute | API Documentation",
    "keywords": "Class ReadOnlyAttribute An attribute that can be used to indicate that a property (especially arrays and dictionaries) should be treated as read-only. Inheritance System.Object System.Attribute ReadOnlyAttribute Inherited Members System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenCollar.Extensions.Configuration Assembly : OpenCollar.Extensions.Configuration.dll Syntax [AttributeUsage(AttributeTargets.Property)] public sealed class ReadOnlyAttribute : Attribute See Also System.Attribute"
  },
  "api/OpenCollar.Extensions.Configuration.ServiceCollectionExtensions.html": {
    "href": "api/OpenCollar.Extensions.Configuration.ServiceCollectionExtensions.html",
    "title": "Class ServiceCollectionExtensions | API Documentation",
    "keywords": "Class ServiceCollectionExtensions Extensions to the Microsoft.Extensions.DependencyInjection.IServiceCollection type allowing configuration objects to be registered. Inheritance System.Object ServiceCollectionExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenCollar.Extensions.Configuration Assembly : OpenCollar.Extensions.Configuration.dll Syntax public static class ServiceCollectionExtensions Methods | Improve this Doc View Source AddConfigurationReader<TConfigurationObject>(IServiceCollection) Add a new kind of configuration reader that represents values taken directly from the Microsoft.Extensions.Configuration.IConfigurationRoot object in the service collection. Declaration public static void AddConfigurationReader<TConfigurationObject>(this IServiceCollection serviceCollection) where TConfigurationObject : IConfigurationObject Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection The service collection to which to add the configuration reader. This must not be null . Type Parameters Name Description TConfigurationObject The interface through which consumers will access the configuration. This must be derived from the IConfigurationObject interface. | Improve this Doc View Source IsConfigurationCollection(Type) Determines whether the specified type is a is configuration collection. Declaration public static bool IsConfigurationCollection(Type type) Parameters Type Name Description System.Type type The type to verify. Returns Type Description System.Boolean true if the type is configuration collection; otherwise, false ."
  },
  "api/OpenCollar.Extensions.Configuration.Collections.ConfigurationDictionaryBase-2.html": {
    "href": "api/OpenCollar.Extensions.Configuration.Collections.ConfigurationDictionaryBase-2.html",
    "title": "Class ConfigurationDictionaryBase<TKey, TElement> | API Documentation",
    "keywords": "Class ConfigurationDictionaryBase<TKey, TElement> A base class provide the functionality used by both dictionaries and collections. Inheritance System.Object ConfigurationDictionaryBase<TKey, TElement> Implements System.Collections.Generic.IDictionary <TKey, TElement> System.Collections.Generic.ICollection < System.Collections.Generic.KeyValuePair <TKey, TElement>> System.Collections.Generic.IEnumerable < System.Collections.Generic.KeyValuePair <TKey, TElement>> System.Collections.IEnumerable System.Collections.Specialized.INotifyCollectionChanged INotifyItemChanged IConfigurationObject System.IDisposable System.ComponentModel.INotifyPropertyChanged Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenCollar.Extensions.Configuration.Collections Assembly : OpenCollar.Extensions.Configuration.dll Syntax public abstract class ConfigurationDictionaryBase<TKey, TElement> : IDictionary<TKey, TElement>, ICollection<KeyValuePair<TKey, TElement>>, IEnumerable<KeyValuePair<TKey, TElement>>, IEnumerable, INotifyCollectionChanged, INotifyItemChanged, IConfigurationObject, IDisposable, INotifyPropertyChanged where TElement : IConfigurationObject Type Parameters Name Description TKey The type of the key. TElement The type of the element. Properties | Improve this Doc View Source Count Gets the number of elements contained in the System.Collections.Generic.ICollection<T> . Declaration public int Count { get; } Property Value Type Description System.Int32 | Improve this Doc View Source IsDirty Gets a value indicating whether this object has any properties with unsaved changes. Declaration public bool IsDirty { get; } Property Value Type Description System.Boolean true if this object has any properties with unsaved changes; otherwise, false . | Improve this Doc View Source IsReadOnly Gets a value indicating whether the System.Collections.Generic.ICollection<T> is read-only. Declaration public abstract bool IsReadOnly { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Item[TKey] Gets or sets the with the specified key. Declaration public TElement this[TKey key] { get; set; } Parameters Type Name Description TKey key The key identifying the element to get or set. Property Value Type Description TElement The to get or set. Exceptions Type Condition System.ArgumentOutOfRangeException key did not identify a valid element. | Improve this Doc View Source Keys Gets an System.Collections.Generic.ICollection<T> containing the keys of the System.Collections.Generic.IDictionary<TKey, TValue> . Declaration public ICollection<TKey> Keys { get; } Property Value Type Description System.Collections.Generic.ICollection <TKey> | Improve this Doc View Source Values Gets an System.Collections.Generic.ICollection<T> containing the values in the System.Collections.Generic.IDictionary<TKey, TValue> . Declaration public ICollection<TElement> Values { get; } Property Value Type Description System.Collections.Generic.ICollection <TElement> Methods | Improve this Doc View Source Add(TKey, TElement) Declaration public void Add(TKey key, TElement value) Parameters Type Name Description TKey key TElement value | Improve this Doc View Source Add(KeyValuePair<TKey, TElement>) Declaration public void Add(KeyValuePair<TKey, TElement> item) Parameters Type Name Description System.Collections.Generic.KeyValuePair <TKey, TElement> item | Improve this Doc View Source Clear() Declaration public void Clear() | Improve this Doc View Source Contains(KeyValuePair<TKey, TElement>) Declaration public bool Contains(KeyValuePair<TKey, TElement> item) Parameters Type Name Description System.Collections.Generic.KeyValuePair <TKey, TElement> item Returns Type Description System.Boolean | Improve this Doc View Source ContainsKey(TKey) Declaration public bool ContainsKey(TKey key) Parameters Type Name Description TKey key Returns Type Description System.Boolean | Improve this Doc View Source CopyTo(KeyValuePair<TKey, TElement>[], Int32) Declaration public void CopyTo(KeyValuePair<TKey, TElement>[] array, int arrayIndex) Parameters Type Name Description System.Collections.Generic.KeyValuePair <TKey, TElement>[] array System.Int32 arrayIndex | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source GetEnumerator() Declaration public IEnumerator<KeyValuePair<TKey, TElement>> GetEnumerator() Returns Type Description System.Collections.Generic.IEnumerator < System.Collections.Generic.KeyValuePair <TKey, TElement>> | Improve this Doc View Source Reload() Declaration public void Reload() | Improve this Doc View Source Remove(TKey) Declaration public bool Remove(TKey key) Parameters Type Name Description TKey key Returns Type Description System.Boolean | Improve this Doc View Source Remove(KeyValuePair<TKey, TElement>) Declaration public bool Remove(KeyValuePair<TKey, TElement> item) Parameters Type Name Description System.Collections.Generic.KeyValuePair <TKey, TElement> item Returns Type Description System.Boolean | Improve this Doc View Source Save() Declaration public void Save() | Improve this Doc View Source TryGetValue(TKey, out TElement) Declaration public bool TryGetValue(TKey key, out TElement value) Parameters Type Name Description TKey key TElement value Returns Type Description System.Boolean Events | Improve this Doc View Source CollectionChanged Declaration public event NotifyCollectionChangedEventHandler CollectionChanged Event Type Type Description System.Collections.Specialized.NotifyCollectionChangedEventHandler | Improve this Doc View Source ItemChanged Declaration public event ItemChangedEventHandler ItemChanged Event Type Type Description ItemChangedEventHandler | Improve this Doc View Source PropertyChanged Declaration public event PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler Explicit Interface Implementations | Improve this Doc View Source IEnumerable.GetEnumerator() Declaration IEnumerator IEnumerable.GetEnumerator() Returns Type Description System.Collections.IEnumerator Implements System.Collections.Generic.IDictionary<TKey, TValue> System.Collections.Generic.ICollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.Collections.Specialized.INotifyCollectionChanged INotifyItemChanged IConfigurationObject System.IDisposable System.ComponentModel.INotifyPropertyChanged See Also System.Collections.Generic.IDictionary <TKey, TValue> System.Collections.Specialized.INotifyCollectionChanged"
  },
  "api/OpenCollar.Extensions.Configuration.IConfigurationObject.html": {
    "href": "api/OpenCollar.Extensions.Configuration.IConfigurationObject.html",
    "title": "Interface IConfigurationObject | API Documentation",
    "keywords": "Interface IConfigurationObject The interface from which all configuration objects are derived. Inherited Members System.IDisposable.Dispose() System.ComponentModel.INotifyPropertyChanged.PropertyChanged Namespace : OpenCollar.Extensions.Configuration Assembly : OpenCollar.Extensions.Configuration.dll Syntax public interface IConfigurationObject : IDisposable, INotifyPropertyChanged Properties | Improve this Doc View Source IsDirty Gets a value indicating whether this object has any properties with unsaved changes. Declaration bool IsDirty { get; } Property Value Type Description System.Boolean true if this object has any properties with unsaved changes; otherwise, false . Methods | Improve this Doc View Source Reload() Loads all of the properties from the configuration sources, overwriting any unsaved changes. Declaration void Reload() | Improve this Doc View Source Save() Saves this current values for each property back to the confuration sources. Declaration void Save()"
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "OpenCollar.Extensions.Configuration | API Documentation",
    "keywords": "OpenCollar.Extensions.Configuration Support for automatic validation, update and strongly-typed access to configuration. Introduction"
  },
  "index.html": {
    "href": "index.html",
    "title": "Where to Start | API Documentation",
    "keywords": "Support for automatic validation, update and strongly-typed access to configuration. Where to Start The starting point is to define an interface through which to read your configuration and add a reader in Startup.cs : // This method gets called by the runtime. Use this method to add services to the container. public void ConfigureServices(IServiceCollection services) { services.AddRazorPages(); services.AddConfigurationReader<IMyConfig>(); } Later, when needed the configuration reader will be available as a service: public MyConstructor(IMyConfig config) { // Your config is available through the interface you defined in IMyConfig, strongly typed and validated. } Project Project Resources Source Code Issue Tracking GitHub Pages Build Status"
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "OpenCollar.Extensions.Configuration | API Documentation",
    "keywords": "OpenCollar.Extensions.Configuration Support for automatic validation, update and strongly-typed access to configuration. API Documentation"
  },
  "api/OpenCollar.Extensions.Configuration.INotifyItemChanged.html": {
    "href": "api/OpenCollar.Extensions.Configuration.INotifyItemChanged.html",
    "title": "Interface INotifyItemChanged | API Documentation",
    "keywords": "Interface INotifyItemChanged A public interface used by collections and objects that raise an event when a child item changes. Namespace : OpenCollar.Extensions.Configuration Assembly : OpenCollar.Extensions.Configuration.dll Syntax public interface INotifyItemChanged Events | Improve this Doc View Source ItemChanged Occurs when an item in a property or collection belonging to this object or a child object is changed. Declaration event ItemChangedEventHandler ItemChanged Event Type Type Description ItemChangedEventHandler"
  },
  "api/OpenCollar.Extensions.Configuration.IConfigurationCollection-1.html": {
    "href": "api/OpenCollar.Extensions.Configuration.IConfigurationCollection-1.html",
    "title": "Interface IConfigurationCollection<TElement> | API Documentation",
    "keywords": "Interface IConfigurationCollection<TElement> Represents a collection of values stored in a property. Inherited Members System.Collections.Generic.IList<TElement>.IndexOf(TElement) System.Collections.Generic.IList<TElement>.Insert(System.Int32, TElement) System.Collections.Generic.IList<TElement>.RemoveAt(System.Int32) System.Collections.Generic.IList<TElement>.Item[System.Int32] System.Collections.Generic.ICollection<TElement>.Add(TElement) System.Collections.Generic.ICollection<TElement>.Clear() System.Collections.Generic.ICollection<TElement>.Contains(TElement) System.Collections.Generic.ICollection<TElement>.CopyTo(TElement[], System.Int32) System.Collections.Generic.ICollection<TElement>.Remove(TElement) System.Collections.Generic.ICollection<TElement>.Count System.Collections.Generic.ICollection<TElement>.IsReadOnly System.Collections.Generic.IEnumerable<TElement>.GetEnumerator() System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged INotifyItemChanged.ItemChanged Namespace : OpenCollar.Extensions.Configuration Assembly : OpenCollar.Extensions.Configuration.dll Syntax public interface IConfigurationCollection<TElement> : IList<TElement>, ICollection<TElement>, IEnumerable<TElement>, IEnumerable, INotifyCollectionChanged, INotifyItemChanged where TElement : IConfigurationObject Type Parameters Name Description TElement The type of the array element. This must be nullable if the type is a reference type and can be null ."
  },
  "api/OpenCollar.Extensions.Configuration.PathAttribute.html": {
    "href": "api/OpenCollar.Extensions.Configuration.PathAttribute.html",
    "title": "Class PathAttribute | API Documentation",
    "keywords": "Class PathAttribute Defines an attribute used to indicate the path to the configuration value(s) underlying a class or individual property. Inheritance System.Object System.Attribute PathAttribute Inherited Members System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenCollar.Extensions.Configuration Assembly : OpenCollar.Extensions.Configuration.dll Syntax [AttributeUsage(AttributeTargets.Class | AttributeTargets.Property, AllowMultiple = false, Inherited = true)] public sealed class PathAttribute : Attribute Constructors | Improve this Doc View Source PathAttribute(PathIs, String) Initializes a new instance of the PathAttribute class. Declaration public PathAttribute(PathIs usage, string path) Parameters Type Name Description PathIs usage The usage. System.String path The path. Exceptions Type Condition System.ArgumentException path must contain a valid path or fragment of a path. System.ArgumentOutOfRangeException usage does not contain a valid value. See Also System.Attribute"
  },
  "api/OpenCollar.Extensions.Configuration.PropertyDef.html": {
    "href": "api/OpenCollar.Extensions.Configuration.PropertyDef.html",
    "title": "Class PropertyDef | API Documentation",
    "keywords": "Class PropertyDef The definition of a property of a configuration object. Inheritance System.Object PropertyDef Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenCollar.Extensions.Configuration Assembly : OpenCollar.Extensions.Configuration.dll Syntax public class PropertyDef Properties | Improve this Doc View Source IsReadOnly Gets a value indicating whether this instance is read only. Declaration public bool IsReadOnly { get; } Property Value Type Description System.Boolean true if the property is read only; otherwise, false for an editable property. | Improve this Doc View Source Path Gets the colon-delimited path to the underlying configuration value. Declaration public string Path { get; } Property Value Type Description System.String The colon-delimited path to the underlying configuration value. | Improve this Doc View Source PropertyName Gets the name of the property represented by this object. Declaration public string PropertyName { get; } Property Value Type Description System.String The name of the property represented by this object. | Improve this Doc View Source Type Gets the type of the value held in the property. Declaration public Type Type { get; } Property Value Type Description System.Type The type of the value held in the property."
  },
  "api/OpenCollar.Extensions.Configuration.html": {
    "href": "api/OpenCollar.Extensions.Configuration.html",
    "title": "Namespace OpenCollar.Extensions.Configuration | API Documentation",
    "keywords": "Namespace OpenCollar.Extensions.Configuration Classes ItemChangedEventArgs The arguments supplied to handlers of the ItemChanged event. PathAttribute Defines an attribute used to indicate the path to the configuration value(s) underlying a class or individual property. PropertyDef The definition of a property of a configuration object. ReadOnlyAttribute An attribute that can be used to indicate that a property (especially arrays and dictionaries) should be treated as read-only. ServiceCollectionExtensions Extensions to the Microsoft.Extensions.DependencyInjection.IServiceCollection type allowing configuration objects to be registered. Interfaces IConfigurationCollection<TElement> Represents a collection of values stored in a property. IConfigurationDictionary<TElement> Defines a dictionary containing configurtation items and keyed on the element name. IConfigurationObject The interface from which all configuration objects are derived. INotifyItemChanged A public interface used by collections and objects that raise an event when a child item changes. Enums PathIs An enumeration of the ways in which the string supplied to the PathAttribute attribute can be used to create a full path. StructuralElementKind Specifies the ways in which a property can be used to represent structural elements. Delegates ItemChangedEventHandler"
  },
  "api/OpenCollar.Extensions.Configuration.Collections.html": {
    "href": "api/OpenCollar.Extensions.Configuration.Collections.html",
    "title": "Namespace OpenCollar.Extensions.Configuration.Collections | API Documentation",
    "keywords": "Namespace OpenCollar.Extensions.Configuration.Collections Classes ConfigurationDictionaryBase<TKey, TElement> A base class provide the functionality used by both dictionaries and collections."
  },
  "api/OpenCollar.Extensions.Configuration.ItemChangedEventArgs.html": {
    "href": "api/OpenCollar.Extensions.Configuration.ItemChangedEventArgs.html",
    "title": "Class ItemChangedEventArgs | API Documentation",
    "keywords": "Class ItemChangedEventArgs The arguments supplied to handlers of the ItemChanged event. Inheritance System.Object System.EventArgs ItemChangedEventArgs Inherited Members System.EventArgs.Empty System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenCollar.Extensions.Configuration Assembly : OpenCollar.Extensions.Configuration.dll Syntax public class ItemChangedEventArgs : EventArgs Constructors | Improve this Doc View Source ItemChangedEventArgs(PropertyDef) Initializes a new instance of the ItemChangedEventArgs class. Declaration public ItemChangedEventArgs(PropertyDef propertyDefinition) Parameters Type Name Description PropertyDef propertyDefinition The definition of the property that has changed. Properties | Improve this Doc View Source PropertyDefinition Gets the PropertyDefinition Declaration public PropertyDef PropertyDefinition { get; } Property Value Type Description PropertyDef"
  },
  "api/OpenCollar.Extensions.Configuration.StructuralElementKind.html": {
    "href": "api/OpenCollar.Extensions.Configuration.StructuralElementKind.html",
    "title": "Enum StructuralElementKind | API Documentation",
    "keywords": "Enum StructuralElementKind Specifies the ways in which a property can be used to represent structural elements. Namespace : OpenCollar.Extensions.Configuration Assembly : OpenCollar.Extensions.Configuration.dll Syntax public enum StructuralElementKind Fields Name Description Array The property contains an array of elements. Dictionary The property contains a dictionary of elements. Property The element is a property that contains a single, unstructured, value. Unknown The kind of structural element is unknown or undefined. Use of this value will usually result in an error; it is provided to as sentinel to detect accidental usages."
  },
  "api/OpenCollar.Extensions.Configuration.PathIs.html": {
    "href": "api/OpenCollar.Extensions.Configuration.PathIs.html",
    "title": "Enum PathIs | API Documentation",
    "keywords": "Enum PathIs An enumeration of the ways in which the string supplied to the PathAttribute attribute can be used to create a full path. Namespace : OpenCollar.Extensions.Configuration Assembly : OpenCollar.Extensions.Configuration.dll Syntax public enum PathIs Fields Name Description Root The path is treated as a root and any previous context is ignored. Suffix The path is treated as a suffix to be applied (as part of semi-colon delited list) to the existing path context. Unknown The usage of the path is unknown or undefined. Use of this value will usually result in an error; it is provided to as sentinel to detect accidental usages."
  },
  "api/OpenCollar.Extensions.Configuration.IConfigurationDictionary-1.html": {
    "href": "api/OpenCollar.Extensions.Configuration.IConfigurationDictionary-1.html",
    "title": "Interface IConfigurationDictionary<TElement> | API Documentation",
    "keywords": "Interface IConfigurationDictionary<TElement> Defines a dictionary containing configurtation items and keyed on the element name. Inherited Members System.Collections.Generic.IDictionary<System.String, TElement>.Add(System.String, TElement) System.Collections.Generic.IDictionary<System.String, TElement>.ContainsKey(System.String) System.Collections.Generic.IDictionary<System.String, TElement>.Remove(System.String) System.Collections.Generic.IDictionary<System.String, TElement>.TryGetValue(System.String, TElement) System.Collections.Generic.IDictionary<System.String, TElement>.Item[System.String] System.Collections.Generic.IDictionary<System.String, TElement>.Keys System.Collections.Generic.IDictionary<System.String, TElement>.Values System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, TElement>>.Add(System.Collections.Generic.KeyValuePair<System.String, TElement>) System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, TElement>>.Clear() System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, TElement>>.Contains(System.Collections.Generic.KeyValuePair<System.String, TElement>) System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, TElement>>.CopyTo(System.Collections.Generic.KeyValuePair<System.String, TElement>[], System.Int32) System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, TElement>>.Remove(System.Collections.Generic.KeyValuePair<System.String, TElement>) System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, TElement>>.Count System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, TElement>>.IsReadOnly System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, TElement>>.GetEnumerator() System.Collections.IEnumerable.GetEnumerator() System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged INotifyItemChanged.ItemChanged Namespace : OpenCollar.Extensions.Configuration Assembly : OpenCollar.Extensions.Configuration.dll Syntax public interface IConfigurationDictionary<TElement> : IDictionary<string, TElement>, ICollection<KeyValuePair<string, TElement>>, IEnumerable<KeyValuePair<string, TElement>>, IEnumerable, INotifyCollectionChanged, INotifyItemChanged where TElement : IConfigurationObject Type Parameters Name Description TElement The type of the elements contained in the dictionary. See Also System.Collections.Generic.IDictionary <TKey, TValue>"
  },
  "api/OpenCollar.Extensions.Configuration.ItemChangedEventHandler.html": {
    "href": "api/OpenCollar.Extensions.Configuration.ItemChangedEventHandler.html",
    "title": "Delegate ItemChangedEventHandler | API Documentation",
    "keywords": "Delegate ItemChangedEventHandler Namespace : OpenCollar.Extensions.Configuration Assembly : OpenCollar.Extensions.Configuration.dll Syntax public delegate void ItemChangedEventHandler(object sender, ItemChangedEventArgs e); Parameters Type Name Description System.Object sender The object that has changed. ItemChangedEventArgs e The ItemChangedEventArgs instance containing the event data."
  }
}