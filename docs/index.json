{
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "OpenCollar.Extensions.Configuration | API Documentation",
    "keywords": "OpenCollar.Extensions.Configuration Support for automatic validation, update and strongly-typed access to configuration. Introduction"
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "OpenCollar.Extensions.Configuration | API Documentation",
    "keywords": "OpenCollar.Extensions.Configuration Support for automatic validation, update and strongly-typed access to configuration. API Documentation"
  },
  "index.html": {
    "href": "index.html",
    "title": "Where to Start | API Documentation",
    "keywords": "Support for automatic validation, update and strongly-typed access to configuration. Where to Start The starting point is to define an interface through which to read your configuration and add a reader in Startup.cs : // This method gets called by the runtime. Use this method to add services to the container. public void ConfigureServices(IServiceCollection services) { services.AddRazorPages(); services.AddConfigurationReader<IMyConfig>(); } Later, when needed the configuration reader will be available as a service: public MyConstructor(IMyConfig config) { // Your config is available through the interface you defined in IMyConfig, strongly typed and validated. } Project Project Resources Source Code Issue Tracking GitHub Pages Build Status"
  },
  "api/OpenCollar.Extensions.Configuration.Implementation.html": {
    "href": "api/OpenCollar.Extensions.Configuration.Implementation.html",
    "title": "Class Implementation | API Documentation",
    "keywords": "Class Implementation The details of the implementation of a property or element. Inheritance System.Object Implementation Implements IImplementation Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenCollar.Extensions.Configuration Assembly : OpenCollar.Extensions.Configuration.dll Syntax public sealed class Implementation : IImplementation Properties | Improve this Doc View Source ImplementationKind Gets the kind of the implementation to use to instantiate values. Declaration public ImplementationKind ImplementationKind { get; } Property Value Type Description ImplementationKind The kind of the implementation to use to instantiate values. | Improve this Doc View Source ImplementationType Gets the type of the object that implements values ( null if the property is naive). Declaration public Type ImplementationType { get; } Property Value Type Description System.Type The type of the object that implements values ( null if the property is naive). | Improve this Doc View Source Type Gets the type of the value represented (the type of the property). Declaration public Type Type { get; } Property Value Type Description System.Type The type of the value represented (the type of the property). Implements IImplementation"
  },
  "api/OpenCollar.Extensions.Configuration.IConfigurationParent.html": {
    "href": "api/OpenCollar.Extensions.Configuration.IConfigurationParent.html",
    "title": "Interface IConfigurationParent | API Documentation",
    "keywords": "Interface IConfigurationParent The interface common to all objects that can be parents to others. Namespace : OpenCollar.Extensions.Configuration Assembly : OpenCollar.Extensions.Configuration.dll Syntax public interface IConfigurationParent Properties | Improve this Doc View Source IsReadOnly Gets a value indicating whether this container is read-only. Declaration bool IsReadOnly { get; } Property Value Type Description System.Boolean true if this container is read-only; otherwise, false . | Improve this Doc View Source PropertyDef Gets the definition of this property object. Declaration IPropertyDef PropertyDef { get; } Property Value Type Description IPropertyDef The definition of this property object. Methods | Improve this Doc View Source CalculatePath() Gets the path to this configuration object. Declaration string CalculatePath() Returns Type Description System.String A string containing the path to this configuration object."
  },
  "api/OpenCollar.Extensions.Configuration.ServiceCollectionExtensions.html": {
    "href": "api/OpenCollar.Extensions.Configuration.ServiceCollectionExtensions.html",
    "title": "Class ServiceCollectionExtensions | API Documentation",
    "keywords": "Class ServiceCollectionExtensions Extensions to the Microsoft.Extensions.DependencyInjection.IServiceCollection type allowing configuration objects to be registered. Inheritance System.Object ServiceCollectionExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenCollar.Extensions.Configuration Assembly : OpenCollar.Extensions.Configuration.dll Syntax public static class ServiceCollectionExtensions Methods | Improve this Doc View Source AddConfigurationReader<TConfigurationObject>(IServiceCollection) Add a new kind of configuration reader that represents values taken directly from the Microsoft.Extensions.Configuration.IConfigurationRoot object in the service collection. Declaration public static void AddConfigurationReader<TConfigurationObject>(this IServiceCollection serviceCollection) where TConfigurationObject : IConfigurationObject Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection The service collection to which to add the configuration reader. This must not be null . Type Parameters Name Description TConfigurationObject The interface through which consumers will access the configuration. This must be derived from the IConfigurationObject interface."
  },
  "api/OpenCollar.Extensions.Configuration.TypeMismatchException.html": {
    "href": "api/OpenCollar.Extensions.Configuration.TypeMismatchException.html",
    "title": "Class TypeMismatchException | API Documentation",
    "keywords": "Class TypeMismatchException An exception thrown when an object of the wrong type is added to a collection or assigned to a property. Inheritance System.Object System.Exception ConfigurationException TypeMismatchException Implements System.Runtime.Serialization.ISerializable Inherited Members ConfigurationException.ConfigurationPath ConfigurationException.GetObjectData(SerializationInfo, StreamingContext) System.Exception.GetBaseException() System.Exception.GetType() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : OpenCollar.Extensions.Configuration Assembly : OpenCollar.Extensions.Configuration.dll Syntax [Serializable] public class TypeMismatchException : ConfigurationException, ISerializable Constructors | Improve this Doc View Source TypeMismatchException() Initializes a new instance of the TypeMismatchException class. Declaration public TypeMismatchException() | Improve this Doc View Source TypeMismatchException(SerializationInfo, StreamingContext) Initializes a new instance of the TypeMismatchException class. Declaration protected TypeMismatchException(SerializationInfo info, StreamingContext context) Parameters Type Name Description System.Runtime.Serialization.SerializationInfo info The System.Runtime.Serialization.SerializationInfo that holds the serialized object data about the exception being thrown. System.Runtime.Serialization.StreamingContext context The System.Runtime.Serialization.StreamingContext that contains contextual information about the source or destination. | Improve this Doc View Source TypeMismatchException(String) Initializes a new instance of the TypeMismatchException class. Declaration public TypeMismatchException(string message) Parameters Type Name Description System.String message The message that describes the error. | Improve this Doc View Source TypeMismatchException(String, Exception) Initializes a new instance of the TypeMismatchException class. Declaration public TypeMismatchException(string message, Exception innerException) Parameters Type Name Description System.String message The error message that explains the reason for the exception. System.Exception innerException The exception that is the cause of the current exception, or null if no inner exception is specified. | Improve this Doc View Source TypeMismatchException(String, String) Initializes a new instance of the TypeMismatchException class. Declaration public TypeMismatchException(string configurationPath, string message) Parameters Type Name Description System.String configurationPath The path to the configuration affected. System.String message The message that describes the error. | Improve this Doc View Source TypeMismatchException(String, String, Exception) Initializes a new instance of the TypeMismatchException class. Declaration public TypeMismatchException(string configurationPath, string message, Exception innerException) Parameters Type Name Description System.String configurationPath The path to the configuration affected. System.String message The error message that explains the reason for the exception. System.Exception innerException The exception that is the cause of the current exception, or null if no inner exception is specified. Implements System.Runtime.Serialization.ISerializable See Also System.Exception"
  },
  "api/OpenCollar.Extensions.Configuration.IValueChanged.html": {
    "href": "api/OpenCollar.Extensions.Configuration.IValueChanged.html",
    "title": "Interface IValueChanged | API Documentation",
    "keywords": "Interface IValueChanged The interface used internally to allow values to call back to their parents to signal that a value has changed. Namespace : OpenCollar.Extensions.Configuration Assembly : OpenCollar.Extensions.Configuration.dll Syntax public interface IValueChanged Methods | Improve this Doc View Source OnValueChanged(IValue, IValue) Called when a value has changed. Declaration void OnValueChanged(IValue oldValue, IValue newValue) Parameters Type Name Description IValue oldValue The old value. IValue newValue The new value."
  },
  "api/OpenCollar.Extensions.Configuration.ImplementationKind.html": {
    "href": "api/OpenCollar.Extensions.Configuration.ImplementationKind.html",
    "title": "Enum ImplementationKind | API Documentation",
    "keywords": "Enum ImplementationKind Defines the way in which the value returned by a property is implemented. Namespace : OpenCollar.Extensions.Configuration Assembly : OpenCollar.Extensions.Configuration.dll Syntax public enum ImplementationKind Fields Name Description ConfigurationCollection The implementation is derived from OpenCollar.Extensions.Configuration.Collections.ConfigurationCollection`1 . ConfigurationDictionary The implementation is derived from OpenCollar.Extensions.Configuration.Collections.ConfigurationDictionary`1 . ConfigurationObject The implementation is derived from ConfigurationObjectBase<TInterface> . Naive The implementation is the naive type (i.e. nothing special is required). Unknown The implementation is unknown or undefined."
  },
  "api/OpenCollar.Extensions.Configuration.PathAttribute.html": {
    "href": "api/OpenCollar.Extensions.Configuration.PathAttribute.html",
    "title": "Class PathAttribute | API Documentation",
    "keywords": "Class PathAttribute Defines an attribute used to indicate the path to the configuration value(s) underlying a class or individual property. Inheritance System.Object System.Attribute PathAttribute Inherited Members System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenCollar.Extensions.Configuration Assembly : OpenCollar.Extensions.Configuration.dll Syntax [AttributeUsage(AttributeTargets.Class | AttributeTargets.Property, AllowMultiple = false, Inherited = true)] public sealed class PathAttribute : Attribute Constructors | Improve this Doc View Source PathAttribute(PathIs, String) Initializes a new instance of the PathAttribute class. Declaration public PathAttribute(PathIs usage, string path) Parameters Type Name Description PathIs usage The usage. System.String path The path. Exceptions Type Condition System.ArgumentException path must contain a valid path or fragment of a path. System.ArgumentOutOfRangeException usage does not contain a valid value. See Also System.Attribute"
  },
  "api/OpenCollar.Extensions.Configuration.ConfigurationObjectBase-1.html": {
    "href": "api/OpenCollar.Extensions.Configuration.ConfigurationObjectBase-1.html",
    "title": "Class ConfigurationObjectBase<TInterface> | API Documentation",
    "keywords": "Class ConfigurationObjectBase<TInterface> A base class that allows configuration from classes in the Microsoft.Extensions.Configuration namespace to be to be accessed through a user-defined model with strongly typed interfaces. Inheritance System.Object Disposable NotifyPropertyChanged ConfigurationObjectBase ConfigurationObjectBase<TInterface> Implements IConfigurationObject System.IDisposable System.ComponentModel.INotifyPropertyChanged IValueChanged IConfigurationParent System.IEquatable <TInterface> Inherited Members ConfigurationObjectBase.IsDirty ConfigurationObjectBase.IsReadOnly ConfigurationObjectBase.PropertyDef ConfigurationObjectBase.Values ConfigurationObjectBase.PropertiesByName ConfigurationObjectBase.Item[String] ConfigurationObjectBase.CalculatePath() ConfigurationObjectBase.Delete() ConfigurationObjectBase.Load() ConfigurationObjectBase.OnValueChanged(IValue, IValue) ConfigurationObjectBase.Save() ConfigurationObjectBase.SetParent(IConfigurationParent) ConfigurationObjectBase.ToString() ConfigurationObjectBase.Dispose(Boolean) NotifyPropertyChanged.PropertyChanged NotifyPropertyChanged.DisablePropertyChangedEvents() NotifyPropertyChanged.EnablePropertyChangedEvents() NotifyPropertyChanged.OnPropertyChanged(String) NotifyPropertyChanged.OnPropertyChanged<T>(String, T, T) Disposable.IsDisposed Disposable.Dispose() Disposable.EnforceDisposed() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : OpenCollar.Extensions.Configuration Assembly : OpenCollar.Extensions.Configuration.dll Syntax public abstract class ConfigurationObjectBase<TInterface> : ConfigurationObjectBase, IConfigurationObject, IDisposable, INotifyPropertyChanged, IValueChanged, IConfigurationChild, IConfigurationParent, IEquatable<TInterface> Type Parameters Name Description TInterface The type of the configuration interface implemented. Remarks For each requested model only a single instance of the model is ever constructed for a given Microsoft.Extensions.Configuration.IConfigurationSection or Microsoft.Extensions.Configuration.IConfigurationRoot . The System.ComponentModel.INotifyPropertyChanged interface is supported allowing changes to be detected and reported from both the underlying configuration source (through the source changed event) and from detected changes made to properties with a setter. Only material changes are reported, and change with no practical impact (for example assigning a new instance of a string with the same value) will not be reported. Constructors | Improve this Doc View Source ConfigurationObjectBase(IConfigurationRoot, IConfigurationParent) Initializes a new instance of the ConfigurationObjectBase<TInterface> class. This is the interface used when creating the root instance for the service collection. Declaration protected ConfigurationObjectBase(IConfigurationRoot configurationRoot, IConfigurationParent parent) Parameters Type Name Description Microsoft.Extensions.Configuration.IConfigurationRoot configurationRoot The configuration root from which to read and write values. IConfigurationParent parent The parent object to which this one belongs. null if this is a root object. Properties | Improve this Doc View Source InterfaceType Gets the type of the interface implemented by this object. Declaration protected override Type InterfaceType { get; } Property Value Type Description System.Type The type of the interface implemented by this object. Overrides ConfigurationObjectBase.InterfaceType Methods | Improve this Doc View Source Equals(TInterface) Indicates whether the current object is equal to another object of the same type. Declaration public bool Equals(TInterface other) Parameters Type Name Description TInterface other An object to compare with this object. Returns Type Description System.Boolean true if the current object is equal to the other parameter; otherwise, false . Implements IConfigurationObject System.IDisposable System.ComponentModel.INotifyPropertyChanged IValueChanged IConfigurationParent System.IEquatable<T> See Also Disposable IConfigurationObject IConfigurationObject"
  },
  "api/OpenCollar.Extensions.Configuration.PathIs.html": {
    "href": "api/OpenCollar.Extensions.Configuration.PathIs.html",
    "title": "Enum PathIs | API Documentation",
    "keywords": "Enum PathIs An enumeration of the ways in which the string supplied to the PathAttribute attribute can be used to create a full path. Namespace : OpenCollar.Extensions.Configuration Assembly : OpenCollar.Extensions.Configuration.dll Syntax public enum PathIs Fields Name Description Root The path is treated as a root and any previous context is ignored. Suffix The path is treated as a suffix to be applied (as part of colon delimited list) to the existing path context. Unknown The usage of the path is unknown or undefined. Use of this value will usually result in an error; it is provided to as sentinel to detect accidental usages."
  },
  "api/OpenCollar.Extensions.Configuration.IConfigurationCollection-1.html": {
    "href": "api/OpenCollar.Extensions.Configuration.IConfigurationCollection-1.html",
    "title": "Interface IConfigurationCollection<TElement> | API Documentation",
    "keywords": "Interface IConfigurationCollection<TElement> Represents a collection of values stored in a property. Inherited Members System.Collections.Generic.IList<TElement>.IndexOf(TElement) System.Collections.Generic.IList<TElement>.Insert(System.Int32, TElement) System.Collections.Generic.IList<TElement>.RemoveAt(System.Int32) System.Collections.Generic.IList<TElement>.Item[System.Int32] System.Collections.Generic.ICollection<TElement>.Add(TElement) System.Collections.Generic.ICollection<TElement>.Clear() System.Collections.Generic.ICollection<TElement>.Contains(TElement) System.Collections.Generic.ICollection<TElement>.CopyTo(TElement[], System.Int32) System.Collections.Generic.ICollection<TElement>.Remove(TElement) System.Collections.Generic.ICollection<TElement>.Count System.Collections.Generic.ICollection<TElement>.IsReadOnly System.Collections.Generic.IEnumerable<TElement>.GetEnumerator() System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged Namespace : OpenCollar.Extensions.Configuration Assembly : OpenCollar.Extensions.Configuration.dll Syntax public interface IConfigurationCollection<TElement> : IList<TElement>, ICollection<TElement>, IEnumerable<TElement>, IEnumerable, INotifyCollectionChanged Type Parameters Name Description TElement The type of the array element. This must be nullable if the type is a reference type and can be null . Methods | Improve this Doc View Source AddCopy(TElement) Adds a new value with the key specified, copying the properties and elements from the value give, returning the new value. Declaration TElement AddCopy(TElement value) Parameters Type Name Description TElement value The value to copy. Returns Type Description TElement The newly added element. Remarks Used to add objects and collections that have been constructed externally using alternate implementations. | Improve this Doc View Source AddNew() Adds a new value with the key specified, returning the new value. Declaration TElement AddNew() Returns Type Description TElement The newly added element."
  },
  "api/OpenCollar.Extensions.Configuration.IConfigurationObject.html": {
    "href": "api/OpenCollar.Extensions.Configuration.IConfigurationObject.html",
    "title": "Interface IConfigurationObject | API Documentation",
    "keywords": "Interface IConfigurationObject The interface from which all configuration objects are derived. Inherited Members System.IDisposable.Dispose() System.ComponentModel.INotifyPropertyChanged.PropertyChanged Namespace : OpenCollar.Extensions.Configuration Assembly : OpenCollar.Extensions.Configuration.dll Syntax public interface IConfigurationObject : IDisposable, INotifyPropertyChanged Properties | Improve this Doc View Source IsDirty Gets a value indicating whether this object has any properties with unsaved changes. Declaration bool IsDirty { get; } Property Value Type Description System.Boolean true if this object has any properties with unsaved changes; otherwise, false . Exceptions Type Condition System.ObjectDisposedException This method cannot be used after the object has been disposed of. Methods | Improve this Doc View Source Delete() Recursively deletes all of the properties from the configuration sources. Declaration void Delete() Exceptions Type Condition System.ObjectDisposedException This method cannot be used after the object has been disposed of. | Improve this Doc View Source Load() Loads all of the properties from the configuration sources, overwriting any unsaved changes. Declaration void Load() Exceptions Type Condition System.ObjectDisposedException This method cannot be used after the object has been disposed of. | Improve this Doc View Source Save() Saves this current values for each property back to the configuration sources. Declaration void Save() Exceptions Type Condition System.ObjectDisposedException This method cannot be used after the object has been disposed of."
  },
  "api/OpenCollar.Extensions.Configuration.IPropertyDef.html": {
    "href": "api/OpenCollar.Extensions.Configuration.IPropertyDef.html",
    "title": "Interface IPropertyDef | API Documentation",
    "keywords": "Interface IPropertyDef The definition of the interface of the class that defines a property of a configuration object. Namespace : OpenCollar.Extensions.Configuration Assembly : OpenCollar.Extensions.Configuration.dll Syntax public interface IPropertyDef Properties | Improve this Doc View Source DefaultValue Gets or sets the default value. Declaration object DefaultValue { get; } Property Value Type Description System.Object The default value. Can be null . | Improve this Doc View Source ElementImplementation Gets the details of the specific implementation of this property. Declaration IImplementation ElementImplementation { get; } Property Value Type Description IImplementation The details of the specific implementation of this property. | Improve this Doc View Source HasDefaultValue Gets a value indicating whether the property represented by this instance has default a value. Declaration bool HasDefaultValue { get; } Property Value Type Description System.Boolean true if the property represented by this instance has default a value; otherwise, false . | Improve this Doc View Source Implementation Gets the details of the specific implementation of this property. Declaration IImplementation Implementation { get; } Property Value Type Description IImplementation The details of the specific implementation of this property. | Improve this Doc View Source IsReadOnly Gets a value indicating whether this instance is read only. Declaration bool IsReadOnly { get; } Property Value Type Description System.Boolean true if the property is read only; otherwise, false for an editable property. | Improve this Doc View Source PathModifier Gets the path modifier. Declaration PathIs PathModifier { get; } Property Value Type Description PathIs The path modifier. | Improve this Doc View Source PathSection Gets the path section. Declaration string PathSection { get; } Property Value Type Description System.String The path section. | Improve this Doc View Source PropertyInfo Gets the property information that defines the interface property. Declaration PropertyInfo PropertyInfo { get; } Property Value Type Description System.Reflection.PropertyInfo The property information that defines the interface property. | Improve this Doc View Source PropertyName Gets the name of the property represented by this object. Declaration string PropertyName { get; } Property Value Type Description System.String The name of the property represented by this object. | Improve this Doc View Source Type Gets the type of the value held in the property. Declaration Type Type { get; } Property Value Type Description System.Type The type of the value held in the property. | Improve this Doc View Source UnderlyingType Gets the basic type represented by the type of the property (for example by int? would have an underlying type of System.Int32 ). Declaration Type UnderlyingType { get; } Property Value Type Description System.Type The basic type represented by the type given. Methods | Improve this Doc View Source CalculatePath(IConfigurationParent) Gets the path to this configuration object. Declaration string CalculatePath(IConfigurationParent parent) Parameters Type Name Description IConfigurationParent parent Returns Type Description System.String A string containing the path to this configuration object. | Improve this Doc View Source ConvertStringToValue(String, String) Parses a string value into the type defined by the property definition. Declaration object ConvertStringToValue(string path, string stringRepresentation) Parameters Type Name Description System.String path The path to the value being converted (used in error messages). System.String stringRepresentation The string to parse. Returns Type Description System.Object The string parsed as the type of this property. Exceptions Type Condition ConfigurationException Value could not be converted. | Improve this Doc View Source ConvertValueToString(Object) Given a value that can be assigned to the property represented, returns a string equivalent. Declaration string ConvertValueToString(object value) Parameters Type Name Description System.Object value The value. Returns Type Description System.String The string equivalent of the value given."
  },
  "api/OpenCollar.Extensions.Configuration.Disposable.html": {
    "href": "api/OpenCollar.Extensions.Configuration.Disposable.html",
    "title": "Class Disposable | API Documentation",
    "keywords": "Class Disposable A base class for disposable objects. Inheritance System.Object Disposable NotifyPropertyChanged Implements System.IDisposable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenCollar.Extensions.Configuration Assembly : OpenCollar.Extensions.Configuration.dll Syntax public abstract class Disposable : IDisposable Properties | Improve this Doc View Source IsDisposed Gets a value indicating whether this instance has been disposed of. Declaration protected bool IsDisposed { get; } Property Value Type Description System.Boolean true if this instance is has been disposed of; otherwise, false . Methods | Improve this Doc View Source Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() | Improve this Doc View Source Dispose(Boolean) Releases unmanaged and - optionally - managed resources. Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description System.Boolean disposing true to release both managed and unmanaged resources; false to release only unmanaged resources. | Improve this Doc View Source EnforceDisposed() Throws an System.ObjectDisposedException if this object has been disposed of. Declaration protected void EnforceDisposed() Exceptions Type Condition System.ObjectDisposedException This method cannot be used after the object has been disposed of. Implements System.IDisposable See Also System.IDisposable"
  },
  "api/OpenCollar.Extensions.Configuration.IConfigurationDictionary-1.html": {
    "href": "api/OpenCollar.Extensions.Configuration.IConfigurationDictionary-1.html",
    "title": "Interface IConfigurationDictionary<TElement> | API Documentation",
    "keywords": "Interface IConfigurationDictionary<TElement> Defines a dictionary containing configuration items and keyed on the element name. Inherited Members System.Collections.Generic.IDictionary<System.String, TElement>.Add(System.String, TElement) System.Collections.Generic.IDictionary<System.String, TElement>.ContainsKey(System.String) System.Collections.Generic.IDictionary<System.String, TElement>.Remove(System.String) System.Collections.Generic.IDictionary<System.String, TElement>.TryGetValue(System.String, TElement) System.Collections.Generic.IDictionary<System.String, TElement>.Item[System.String] System.Collections.Generic.IDictionary<System.String, TElement>.Keys System.Collections.Generic.IDictionary<System.String, TElement>.Values System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, TElement>>.Add(System.Collections.Generic.KeyValuePair<System.String, TElement>) System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, TElement>>.Clear() System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, TElement>>.Contains(System.Collections.Generic.KeyValuePair<System.String, TElement>) System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, TElement>>.CopyTo(System.Collections.Generic.KeyValuePair<System.String, TElement>[], System.Int32) System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, TElement>>.Remove(System.Collections.Generic.KeyValuePair<System.String, TElement>) System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, TElement>>.Count System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, TElement>>.IsReadOnly System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, TElement>>.GetEnumerator() System.Collections.IEnumerable.GetEnumerator() System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged Namespace : OpenCollar.Extensions.Configuration Assembly : OpenCollar.Extensions.Configuration.dll Syntax public interface IConfigurationDictionary<TElement> : IDictionary<string, TElement>, ICollection<KeyValuePair<string, TElement>>, IEnumerable<KeyValuePair<string, TElement>>, IEnumerable, INotifyCollectionChanged Type Parameters Name Description TElement The type of the elements contained in the dictionary. Methods | Improve this Doc View Source AddCopy(String, TElement) Adds a new value with the key specified, copying the properties and elements from the value give, returning the new value. Declaration TElement AddCopy(string key, TElement value) Parameters Type Name Description System.String key The key identifying the value to add. TElement value The value to copy. Returns Type Description TElement The newly added element. Remarks Used to add objects and collections that have been constructed externally using alternate implementations. | Improve this Doc View Source AddNew(String) Adds a new value with the key specified, returning the new value. Declaration TElement AddNew(string key) Parameters Type Name Description System.String key The key identifying the value to add. Returns Type Description TElement The newly added element. | Improve this Doc View Source Contains(TElement) Determines whether this dictionary contains the element specified. Declaration bool Contains(TElement element) Parameters Type Name Description TElement element The element for which to check. Returns Type Description System.Boolean true if the dictionary contains the specified element; otherwise, false . See Also System.Collections.Generic.IDictionary <TKey, TValue>"
  },
  "api/OpenCollar.Extensions.Configuration.IImplementation.html": {
    "href": "api/OpenCollar.Extensions.Configuration.IImplementation.html",
    "title": "Interface IImplementation | API Documentation",
    "keywords": "Interface IImplementation The details of the implementation of a property or element. Namespace : OpenCollar.Extensions.Configuration Assembly : OpenCollar.Extensions.Configuration.dll Syntax public interface IImplementation Properties | Improve this Doc View Source ImplementationKind Gets the kind of the implementation to use to instantiate values. Declaration ImplementationKind ImplementationKind { get; } Property Value Type Description ImplementationKind The kind of the implementation to use to instantiate values. | Improve this Doc View Source ImplementationType Gets the type of the object that implements values ( null if the property is naive). Declaration Type ImplementationType { get; } Property Value Type Description System.Type The type of the object that implements values ( null if the property is naive). | Improve this Doc View Source Type Gets the type of the value represented (the type of the property). Declaration Type Type { get; } Property Value Type Description System.Type The type of the value represented (the type of the property)."
  },
  "api/OpenCollar.Extensions.Configuration.html": {
    "href": "api/OpenCollar.Extensions.Configuration.html",
    "title": "Namespace OpenCollar.Extensions.Configuration | API Documentation",
    "keywords": "Namespace OpenCollar.Extensions.Configuration Classes ConfigurationException An exception thrown when an error occurs during the reading or writing of configuration. ConfigurationObjectBase A base class that allows configuration from classes in the Microsoft.Extensions.Configuration namespace to be to be accessed through a user-defined model with strongly typed interfaces. ConfigurationObjectBase<TInterface> A base class that allows configuration from classes in the Microsoft.Extensions.Configuration namespace to be to be accessed through a user-defined model with strongly typed interfaces. DefaultValueAttribute An attribute that can be used to specify the default value to return if no value is defined in the configuration root. Disposable A base class for disposable objects. Implementation The details of the implementation of a property or element. NotifyPropertyChanged A base class providing an implementation of the System.ComponentModel.INotifyPropertyChanged interface (and the System.IDisposable interface. PathAttribute Defines an attribute used to indicate the path to the configuration value(s) underlying a class or individual property. ServiceCollectionExtensions Extensions to the Microsoft.Extensions.DependencyInjection.IServiceCollection type allowing configuration objects to be registered. TypeMismatchException An exception thrown when an object of the wrong type is added to a collection or assigned to a property. Interfaces IConfigurationCollection<TElement> Represents a collection of values stored in a property. IConfigurationDictionary<TElement> Defines a dictionary containing configuration items and keyed on the element name. IConfigurationObject The interface from which all configuration objects are derived. IConfigurationParent The interface common to all objects that can be parents to others. IImplementation The details of the implementation of a property or element. IPropertyDef The definition of the interface of the class that defines a property of a configuration object. IValue The interface internally exposed by value objects. IValueChanged The interface used internally to allow values to call back to their parents to signal that a value has changed. Enums ImplementationKind Defines the way in which the value returned by a property is implemented. PathIs An enumeration of the ways in which the string supplied to the PathAttribute attribute can be used to create a full path."
  },
  "api/OpenCollar.Extensions.Configuration.DefaultValueAttribute.html": {
    "href": "api/OpenCollar.Extensions.Configuration.DefaultValueAttribute.html",
    "title": "Class DefaultValueAttribute | API Documentation",
    "keywords": "Class DefaultValueAttribute An attribute that can be used to specify the default value to return if no value is defined in the configuration root. Inheritance System.Object System.Attribute DefaultValueAttribute Inherited Members System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenCollar.Extensions.Configuration Assembly : OpenCollar.Extensions.Configuration.dll Syntax [AttributeUsage(AttributeTargets.Property)] public sealed class DefaultValueAttribute : Attribute Constructors | Improve this Doc View Source DefaultValueAttribute(Object) Initializes a new instance of the DefaultValueAttribute class. Declaration public DefaultValueAttribute(object defaultValue) Parameters Type Name Description System.Object defaultValue The default value to return if no value is defined in the configuration root. Can be null . Properties | Improve this Doc View Source DefaultValue Gets the default value. Declaration public object DefaultValue { get; } Property Value Type Description System.Object The default value to return if no value is defined in the configuration root. Can be null . See Also System.Attribute"
  },
  "api/OpenCollar.Extensions.Configuration.ConfigurationObjectBase.html": {
    "href": "api/OpenCollar.Extensions.Configuration.ConfigurationObjectBase.html",
    "title": "Class ConfigurationObjectBase | API Documentation",
    "keywords": "Class ConfigurationObjectBase A base class that allows configuration from classes in the Microsoft.Extensions.Configuration namespace to be to be accessed through a user-defined model with strongly typed interfaces. Inheritance System.Object Disposable NotifyPropertyChanged ConfigurationObjectBase ConfigurationObjectBase<TInterface> Implements IConfigurationObject System.IDisposable System.ComponentModel.INotifyPropertyChanged IValueChanged IConfigurationParent Inherited Members NotifyPropertyChanged.PropertyChanged NotifyPropertyChanged.DisablePropertyChangedEvents() NotifyPropertyChanged.EnablePropertyChangedEvents() NotifyPropertyChanged.OnPropertyChanged(String) NotifyPropertyChanged.OnPropertyChanged<T>(String, T, T) Disposable.IsDisposed Disposable.Dispose() Disposable.EnforceDisposed() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : OpenCollar.Extensions.Configuration Assembly : OpenCollar.Extensions.Configuration.dll Syntax public abstract class ConfigurationObjectBase : NotifyPropertyChanged, IConfigurationObject, IDisposable, INotifyPropertyChanged, IValueChanged, IConfigurationChild, IConfigurationParent Remarks For each requested model only a single instance of the model is ever constructed for a given Microsoft.Extensions.Configuration.IConfigurationSection or Microsoft.Extensions.Configuration.IConfigurationRoot . The System.ComponentModel.INotifyPropertyChanged interface is supported allowing changes to be detected and reported from both the underlying configuration source (through the source changed event) and from detected changes made to properties with a setter. Only material changes are reported, and change with no practical impact (for example assigning a new instance of a string with the same value) will not be reported. Constructors | Improve this Doc View Source ConfigurationObjectBase(IPropertyDef, IConfigurationRoot, IConfigurationParent) Initializes a new instance of the ConfigurationObjectBase class. Declaration protected ConfigurationObjectBase(IPropertyDef propertyDef, IConfigurationRoot configurationRoot, IConfigurationParent parent) Parameters Type Name Description IPropertyDef propertyDef The definition of the property defined by this object. This can be if this object is the root of the hierarchy. Microsoft.Extensions.Configuration.IConfigurationRoot configurationRoot The configuration root from which to read and write values. IConfigurationParent parent The parent object to which this one belongs. null if this is a root object. Exceptions Type Condition System.ArgumentNullException configurationRoot is null . | Improve this Doc View Source ConfigurationObjectBase(IEnumerable<IPropertyDef>, IConfigurationRoot, IConfigurationParent) Initializes a new instance of the ConfigurationObjectBase class. Declaration protected ConfigurationObjectBase(IEnumerable<IPropertyDef> childPropertyDefs, IConfigurationRoot configurationRoot, IConfigurationParent parent) Parameters Type Name Description System.Collections.Generic.IEnumerable < IPropertyDef > childPropertyDefs A sequence containing the definitions of the properties to represent. Microsoft.Extensions.Configuration.IConfigurationRoot configurationRoot The configuration root from which to read and write values. IConfigurationParent parent The parent object to which this one belongs. null if this is a root object. Exceptions Type Condition System.ArgumentNullException childPropertyDefs is null . Properties | Improve this Doc View Source InterfaceType Gets the type of the interface implemented by this object. Declaration protected abstract Type InterfaceType { get; } Property Value Type Description System.Type The type of the interface implemented by this object. | Improve this Doc View Source IsDirty Gets a value indicating whether this object has any properties with unsaved changes. Declaration public bool IsDirty { get; } Property Value Type Description System.Boolean true if this object has any properties with unsaved changes; otherwise, false . Exceptions Type Condition System.ObjectDisposedException This method cannot be used after the object has been disposed of. | Improve this Doc View Source IsReadOnly Gets a value indicating whether this container is read-only. Declaration public bool IsReadOnly { get; } Property Value Type Description System.Boolean true if this container is read-only; otherwise, false . | Improve this Doc View Source Item[String] Gets or sets the value of the property with the specified name. Declaration protected object this[string name] { get; set; } Parameters Type Name Description System.String name The name of the property to get or set. Property Value Type Description System.Object The value requested. Exceptions Type Condition System.ObjectDisposedException This method cannot be used after the object has been disposed of. | Improve this Doc View Source PropertiesByName Gets a dictionary of property values keyed on the name of the property it represents (case sensitive). Declaration protected IDictionary<string, IValue> PropertiesByName { get; } Property Value Type Description System.Collections.Generic.IDictionary < System.String , IValue > A dictionary of property values keyed on the name of the property it represents (case sensitive). | Improve this Doc View Source PropertyDef Gets the definition of this property object. Declaration public IPropertyDef PropertyDef { get; } Property Value Type Description IPropertyDef The definition of this property object. | Improve this Doc View Source Values Gets the property values of the object. Declaration protected IEnumerable<IValue> Values { get; } Property Value Type Description System.Collections.Generic.IEnumerable < IValue > The property values of the object. Methods | Improve this Doc View Source CalculatePath() Gets the path to this configuration object. Declaration public string CalculatePath() Returns Type Description System.String A string containing the path to this configuration object. | Improve this Doc View Source Delete() Recursively deletes all of the properties from the configuration sources. Declaration public void Delete() Exceptions Type Condition System.ObjectDisposedException This method cannot be used after the object has been disposed of. | Improve this Doc View Source Dispose(Boolean) Releases unmanaged and - optionally - managed resources. Declaration protected override void Dispose(bool disposing) Parameters Type Name Description System.Boolean disposing true to release both managed and unmanaged resources; false to release only unmanaged resources. Overrides Disposable.Dispose(Boolean) | Improve this Doc View Source Load() Loads all of the properties from the configuration sources, overwriting any unsaved changes. Declaration public void Load() Exceptions Type Condition System.ObjectDisposedException This method cannot be used after the object has been disposed of. | Improve this Doc View Source OnValueChanged(IValue, IValue) Called when a value has changed. Declaration public void OnValueChanged(IValue oldValue, IValue newValue) Parameters Type Name Description IValue oldValue The old value. IValue newValue The new value. | Improve this Doc View Source Save() Saves this current values for each property back to the configuration sources. Declaration public void Save() Exceptions Type Condition System.ObjectDisposedException This method cannot be used after the object has been disposed of. | Improve this Doc View Source SetParent(IConfigurationParent) Sets the parent of a configuration object. Declaration public void SetParent(IConfigurationParent parent) Parameters Type Name Description IConfigurationParent parent The new parent object. | Improve this Doc View Source ToString() Converts to string. Declaration public override string ToString() Returns Type Description System.String A System.String that represents this instance. Overrides System.Object.ToString() Implements IConfigurationObject System.IDisposable System.ComponentModel.INotifyPropertyChanged IValueChanged IConfigurationParent See Also IConfigurationObject"
  },
  "api/OpenCollar.Extensions.Configuration.IValue.html": {
    "href": "api/OpenCollar.Extensions.Configuration.IValue.html",
    "title": "Interface IValue | API Documentation",
    "keywords": "Interface IValue The interface internally exposed by value objects. Namespace : OpenCollar.Extensions.Configuration Assembly : OpenCollar.Extensions.Configuration.dll Syntax public interface IValue Properties | Improve this Doc View Source IsDirty Gets a value indicating whether this property has unsaved changes. Declaration bool IsDirty { get; } Property Value Type Description System.Boolean true if this property has unsaved changes; otherwise, false . | Improve this Doc View Source Parent Gets the parent object to which this value belongs. Declaration IValueChanged Parent { get; } Property Value Type Description IValueChanged The parent object to which this value belongs. | Improve this Doc View Source Path Gets the colon-delimited path to the underlying configuration value. Declaration string Path { get; } Property Value Type Description System.String The colon-delimited path to the underlying configuration value. | Improve this Doc View Source PropertyDef Gets the definition of the property represented by this value. Declaration IPropertyDef PropertyDef { get; } Property Value Type Description IPropertyDef The definition of the property represented by this value. | Improve this Doc View Source Value Gets or sets the value of the property represented by this instance. Declaration object Value { get; set; } Property Value Type Description System.Object The value of the property. Methods | Improve this Doc View Source DeleteValue(IConfigurationRoot) Reads the value of the value identified by PropertyDef from the configuration root given. Declaration void DeleteValue(IConfigurationRoot configurationRoot) Parameters Type Name Description Microsoft.Extensions.Configuration.IConfigurationRoot configurationRoot The configuration root from which to read the value. | Improve this Doc View Source ReadValue(IConfigurationRoot) Reads the value of the value identified by PropertyDef from the configuration root given. Declaration void ReadValue(IConfigurationRoot configurationRoot) Parameters Type Name Description Microsoft.Extensions.Configuration.IConfigurationRoot configurationRoot The configuration root from which to read the value. | Improve this Doc View Source SetValue(Object) Sets the value without firing any events. Declaration bool SetValue(object value) Parameters Type Name Description System.Object value The new value. Returns Type Description System.Boolean true if the value has changed; otherwise, false . | Improve this Doc View Source WriteValue(IConfigurationRoot) Writes the value to the configuration store. Declaration void WriteValue(IConfigurationRoot configurationRoot) Parameters Type Name Description Microsoft.Extensions.Configuration.IConfigurationRoot configurationRoot The configuration root to which to write the value."
  },
  "api/OpenCollar.Extensions.Configuration.NotifyPropertyChanged.html": {
    "href": "api/OpenCollar.Extensions.Configuration.NotifyPropertyChanged.html",
    "title": "Class NotifyPropertyChanged | API Documentation",
    "keywords": "Class NotifyPropertyChanged A base class providing an implementation of the System.ComponentModel.INotifyPropertyChanged interface (and the System.IDisposable interface. Inheritance System.Object Disposable NotifyPropertyChanged ConfigurationObjectBase Implements System.IDisposable System.ComponentModel.INotifyPropertyChanged Inherited Members Disposable.IsDisposed Disposable.Dispose() Disposable.Dispose(Boolean) Disposable.EnforceDisposed() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenCollar.Extensions.Configuration Assembly : OpenCollar.Extensions.Configuration.dll Syntax public abstract class NotifyPropertyChanged : Disposable, IDisposable, INotifyPropertyChanged Methods | Improve this Doc View Source DisablePropertyChangedEvents() Disables the firing of the System.ComponentModel.INotifyPropertyChanged.PropertyChanged event on the current thread. Declaration protected void DisablePropertyChangedEvents() | Improve this Doc View Source EnablePropertyChangedEvents() Enables the firing of the System.ComponentModel.INotifyPropertyChanged.PropertyChanged event on the current thread. Declaration protected void EnablePropertyChangedEvents() | Improve this Doc View Source OnPropertyChanged(String) Called when an underlying property has been changed. Declaration protected void OnPropertyChanged(string propertyName) Parameters Type Name Description System.String propertyName The name of the property that has changed. Exceptions Type Condition System.AggregateException One or more change event handlers threw an exception. | Improve this Doc View Source OnPropertyChanged<T>(String, ref T, T) Called when a property is to be changed. Declaration protected bool OnPropertyChanged<T>(string propertyName, ref T field, T value) Parameters Type Name Description System.String propertyName The name of the property that has changed. T field The field to which the value is to be assigned. T value The value to assign. Returns Type Description System.Boolean true if the property has changed; otherwise, false Type Parameters Name Description T The type of the property. Remarks Raises the PropertyChanged event if the value has changed. Events | Improve this Doc View Source PropertyChanged Occurs when a property changes. Declaration public event PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler Implements System.IDisposable System.ComponentModel.INotifyPropertyChanged See Also System.ComponentModel.INotifyPropertyChanged System.IDisposable"
  },
  "api/OpenCollar.Extensions.Configuration.ConfigurationException.html": {
    "href": "api/OpenCollar.Extensions.Configuration.ConfigurationException.html",
    "title": "Class ConfigurationException | API Documentation",
    "keywords": "Class ConfigurationException An exception thrown when an error occurs during the reading or writing of configuration. Inheritance System.Object System.Exception ConfigurationException TypeMismatchException Implements System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetBaseException() System.Exception.GetType() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : OpenCollar.Extensions.Configuration Assembly : OpenCollar.Extensions.Configuration.dll Syntax [Serializable] public class ConfigurationException : Exception, ISerializable Constructors | Improve this Doc View Source ConfigurationException() Initializes a new instance of the ConfigurationException class. Declaration public ConfigurationException() | Improve this Doc View Source ConfigurationException(SerializationInfo, StreamingContext) Initializes a new instance of the ConfigurationException class. Declaration protected ConfigurationException(SerializationInfo info, StreamingContext context) Parameters Type Name Description System.Runtime.Serialization.SerializationInfo info The System.Runtime.Serialization.SerializationInfo that holds the serialized object data about the exception being thrown. System.Runtime.Serialization.StreamingContext context The System.Runtime.Serialization.StreamingContext that contains contextual information about the source or destination. | Improve this Doc View Source ConfigurationException(String) Initializes a new instance of the ConfigurationException class. Declaration public ConfigurationException(string message) Parameters Type Name Description System.String message The message that describes the error. | Improve this Doc View Source ConfigurationException(String, Exception) Initializes a new instance of the ConfigurationException class. Declaration public ConfigurationException(string message, Exception innerException) Parameters Type Name Description System.String message The error message that explains the reason for the exception. System.Exception innerException The exception that is the cause of the current exception, or null if no inner exception is specified. | Improve this Doc View Source ConfigurationException(String, String) Initializes a new instance of the ConfigurationException class. Declaration public ConfigurationException(string configurationPath, string message) Parameters Type Name Description System.String configurationPath The path to the configuration affected. System.String message The message that describes the error. | Improve this Doc View Source ConfigurationException(String, String, Exception) Initializes a new instance of the ConfigurationException class. Declaration public ConfigurationException(string configurationPath, string message, Exception innerException) Parameters Type Name Description System.String configurationPath The path to the configuration affected. System.String message The error message that explains the reason for the exception. System.Exception innerException The exception that is the cause of the current exception, or null if no inner exception is specified. Properties | Improve this Doc View Source ConfigurationPath Gets or sets the path to the configuration affected. Declaration public string ConfigurationPath { get; set; } Property Value Type Description System.String The path to the configuration affected. Methods | Improve this Doc View Source GetObjectData(SerializationInfo, StreamingContext) When overridden in a derived class, sets the System.Runtime.Serialization.SerializationInfo with information about the exception. Declaration public override void GetObjectData(SerializationInfo info, StreamingContext context) Parameters Type Name Description System.Runtime.Serialization.SerializationInfo info The System.Runtime.Serialization.SerializationInfo that holds the serialized object data about the exception being thrown. System.Runtime.Serialization.StreamingContext context The System.Runtime.Serialization.StreamingContext that contains contextual information about the source or destination. Overrides System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) Exceptions Type Condition System.ArgumentNullException info is null . Implements System.Runtime.Serialization.ISerializable See Also System.Exception"
  }
}