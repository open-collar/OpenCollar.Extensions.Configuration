{
  "api/OpenCollar.Extensions.Configuration.TypeMismatchException.html": {
    "href": "api/OpenCollar.Extensions.Configuration.TypeMismatchException.html",
    "title": "Class TypeMismatchException | API Documentation",
    "keywords": "Class TypeMismatchException An exception thrown when an object of the wrong type is added to a collection or assigned to a property. Inheritance System.Object System.Exception ConfigurationException TypeMismatchException Implements System.Runtime.Serialization.ISerializable Inherited Members ConfigurationException.ConfigurationPath ConfigurationException.GetObjectData(SerializationInfo, StreamingContext) System.Exception.GetBaseException() System.Exception.GetType() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : OpenCollar.Extensions.Configuration Assembly : OpenCollar.Extensions.Configuration.dll Syntax [Serializable] public class TypeMismatchException : ConfigurationException, ISerializable Constructors | Improve this Doc View Source TypeMismatchException() Initializes a new instance of the TypeMismatchException class. Declaration public TypeMismatchException() | Improve this Doc View Source TypeMismatchException(SerializationInfo, StreamingContext) Initializes a new instance of the TypeMismatchException class. Declaration protected TypeMismatchException(SerializationInfo info, StreamingContext context) Parameters Type Name Description System.Runtime.Serialization.SerializationInfo info The System.Runtime.Serialization.SerializationInfo that holds the serialized object data about the exception being thrown. System.Runtime.Serialization.StreamingContext context The System.Runtime.Serialization.StreamingContext that contains contextual information about the source or destination. | Improve this Doc View Source TypeMismatchException(String) Initializes a new instance of the TypeMismatchException class. Declaration public TypeMismatchException(string message) Parameters Type Name Description System.String message The message that describes the error. | Improve this Doc View Source TypeMismatchException(String, Exception) Initializes a new instance of the TypeMismatchException class. Declaration public TypeMismatchException(string message, Exception innerException) Parameters Type Name Description System.String message The error message that explains the reason for the exception. System.Exception innerException The exception that is the cause of the current exception, or null if no inner exception is specified. | Improve this Doc View Source TypeMismatchException(String, String) Initializes a new instance of the TypeMismatchException class. Declaration public TypeMismatchException(string configurationPath, string message) Parameters Type Name Description System.String configurationPath The path to the configuration affected. System.String message The message that describes the error. | Improve this Doc View Source TypeMismatchException(String, String, Exception) Initializes a new instance of the TypeMismatchException class. Declaration public TypeMismatchException(string configurationPath, string message, Exception innerException) Parameters Type Name Description System.String configurationPath The path to the configuration affected. System.String message The error message that explains the reason for the exception. System.Exception innerException The exception that is the cause of the current exception, or null if no inner exception is specified. Implements System.Runtime.Serialization.ISerializable See Also System.Exception"
  },
  "api/OpenCollar.Extensions.Configuration.IConfigurationObject.html": {
    "href": "api/OpenCollar.Extensions.Configuration.IConfigurationObject.html",
    "title": "Interface IConfigurationObject | API Documentation",
    "keywords": "Interface IConfigurationObject The interface from which all configuration objects are derived. Inherited Members System.IDisposable.Dispose() System.ComponentModel.INotifyPropertyChanged.PropertyChanged Namespace : OpenCollar.Extensions.Configuration Assembly : OpenCollar.Extensions.Configuration.dll Syntax public interface IConfigurationObject : IDisposable, INotifyPropertyChanged Properties | Improve this Doc View Source IsDirty Gets a value indicating whether this object has any properties with unsaved changes. Declaration bool IsDirty { get; } Property Value Type Description System.Boolean true if this object has any properties with unsaved changes; otherwise, false . Exceptions Type Condition System.ObjectDisposedException This method cannot be used after the object has been disposed of. Methods | Improve this Doc View Source Delete() Recursively deletes all of the properties from the configuration sources. Declaration void Delete() Exceptions Type Condition System.ObjectDisposedException This method cannot be used after the object has been disposed of. | Improve this Doc View Source Load() Loads all of the properties from the configuration sources, overwriting any unsaved changes. Declaration void Load() Exceptions Type Condition System.ObjectDisposedException This method cannot be used after the object has been disposed of. | Improve this Doc View Source Save() Saves this current values for each property back to the configuration sources. Declaration void Save() Exceptions Type Condition System.ObjectDisposedException This method cannot be used after the object has been disposed of."
  },
  "api/OpenCollar.Extensions.Configuration.IConfigurationDictionary-1.html": {
    "href": "api/OpenCollar.Extensions.Configuration.IConfigurationDictionary-1.html",
    "title": "Interface IConfigurationDictionary<TElement> | API Documentation",
    "keywords": "Interface IConfigurationDictionary<TElement> Defines a dictionary containing configuration items and keyed on the element name. Inherited Members System.Collections.Generic.IDictionary<System.String, TElement>.Add(System.String, TElement) System.Collections.Generic.IDictionary<System.String, TElement>.ContainsKey(System.String) System.Collections.Generic.IDictionary<System.String, TElement>.Remove(System.String) System.Collections.Generic.IDictionary<System.String, TElement>.TryGetValue(System.String, TElement) System.Collections.Generic.IDictionary<System.String, TElement>.Item[System.String] System.Collections.Generic.IDictionary<System.String, TElement>.Keys System.Collections.Generic.IDictionary<System.String, TElement>.Values System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, TElement>>.Add(System.Collections.Generic.KeyValuePair<System.String, TElement>) System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, TElement>>.Clear() System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, TElement>>.Contains(System.Collections.Generic.KeyValuePair<System.String, TElement>) System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, TElement>>.CopyTo(System.Collections.Generic.KeyValuePair<System.String, TElement>[], System.Int32) System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, TElement>>.Remove(System.Collections.Generic.KeyValuePair<System.String, TElement>) System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, TElement>>.Count System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, TElement>>.IsReadOnly System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, TElement>>.GetEnumerator() System.Collections.IEnumerable.GetEnumerator() System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged Namespace : OpenCollar.Extensions.Configuration Assembly : OpenCollar.Extensions.Configuration.dll Syntax public interface IConfigurationDictionary<TElement> : IDictionary<string, TElement>, ICollection<KeyValuePair<string, TElement>>, IEnumerable<KeyValuePair<string, TElement>>, IEnumerable, INotifyCollectionChanged Type Parameters Name Description TElement The type of the elements contained in the dictionary. Methods | Improve this Doc View Source AddCopy(String, TElement) Adds a new value with the key specified, copying the properties and elements from the value give, returning the new value. Declaration TElement AddCopy(string key, TElement value) Parameters Type Name Description System.String key The key identifying the value to add. TElement value The value to copy. Returns Type Description TElement The newly added element. Remarks Used to add objects and collections that have been constructed externally using alternate implementations. | Improve this Doc View Source AddNew(String) Adds a new value with the key specified, returning the new value. Declaration TElement AddNew(string key) Parameters Type Name Description System.String key The key identifying the value to add. Returns Type Description TElement The newly added element. | Improve this Doc View Source Contains(TElement) Determines whether this dictionary contains the element specified. Declaration bool Contains(TElement element) Parameters Type Name Description TElement element The element for which to check. Returns Type Description System.Boolean true if the dictionary contains the specified element; otherwise, false . See Also System.Collections.Generic.IDictionary <TKey, TValue>"
  },
  "api/OpenCollar.Extensions.Configuration.ConfigurationObjectComparer.html": {
    "href": "api/OpenCollar.Extensions.Configuration.ConfigurationObjectComparer.html",
    "title": "Class ConfigurationObjectComparer | API Documentation",
    "keywords": "Class ConfigurationObjectComparer A comparer for objects that implement interfaces derived from IConfigurationObject . Inheritance System.Object ConfigurationObjectComparer Implements System.Collections.Generic.IEqualityComparer < IConfigurationObject > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenCollar.Extensions.Configuration Assembly : OpenCollar.Extensions.Configuration.dll Syntax public class ConfigurationObjectComparer : IEqualityComparer<IConfigurationObject> Properties | Improve this Doc View Source Instance Gets an instance of the comparer Declaration public static ConfigurationObjectComparer Instance { get; } Property Value Type Description ConfigurationObjectComparer The instance of the comparer Methods | Improve this Doc View Source Equals(IConfigurationObject, IConfigurationObject) Determines whether the specified objects are equal. Declaration public bool Equals(IConfigurationObject x, IConfigurationObject y) Parameters Type Name Description IConfigurationObject x The first object of type to compare. IConfigurationObject y The second object of type to compare. Returns Type Description System.Boolean true if the specified objects are equal; otherwise, false . | Improve this Doc View Source GetHashCode(IConfigurationObject) Returns a hash code for this instance. Declaration public int GetHashCode(IConfigurationObject obj) Parameters Type Name Description IConfigurationObject obj The object. Returns Type Description System.Int32 A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Implements System.Collections.Generic.IEqualityComparer<T> See Also System.Collections.Generic.IEqualityComparer <T>"
  },
  "api/OpenCollar.Extensions.Configuration.IConfigurationCollection-1.html": {
    "href": "api/OpenCollar.Extensions.Configuration.IConfigurationCollection-1.html",
    "title": "Interface IConfigurationCollection<TElement> | API Documentation",
    "keywords": "Interface IConfigurationCollection<TElement> Represents a collection of values stored in a property. Inherited Members System.Collections.Generic.IList<TElement>.IndexOf(TElement) System.Collections.Generic.IList<TElement>.Insert(System.Int32, TElement) System.Collections.Generic.IList<TElement>.RemoveAt(System.Int32) System.Collections.Generic.IList<TElement>.Item[System.Int32] System.Collections.Generic.ICollection<TElement>.Add(TElement) System.Collections.Generic.ICollection<TElement>.Clear() System.Collections.Generic.ICollection<TElement>.Contains(TElement) System.Collections.Generic.ICollection<TElement>.CopyTo(TElement[], System.Int32) System.Collections.Generic.ICollection<TElement>.Remove(TElement) System.Collections.Generic.ICollection<TElement>.Count System.Collections.Generic.ICollection<TElement>.IsReadOnly System.Collections.Generic.IEnumerable<TElement>.GetEnumerator() System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged Namespace : OpenCollar.Extensions.Configuration Assembly : OpenCollar.Extensions.Configuration.dll Syntax public interface IConfigurationCollection<TElement> : IList<TElement>, ICollection<TElement>, IEnumerable<TElement>, IEnumerable, INotifyCollectionChanged Type Parameters Name Description TElement The type of the array element. This must be nullable if the type is a reference type and can be null . Methods | Improve this Doc View Source AddCopy(TElement) Adds a new value with the key specified, copying the properties and elements from the value give, returning the new value. Declaration TElement AddCopy(TElement value) Parameters Type Name Description TElement value The value to copy. Returns Type Description TElement The newly added element. Remarks Used to add objects and collections that have been constructed externally using alternate implementations. | Improve this Doc View Source AddNew() Adds a new value with the key specified, returning the new value. Declaration TElement AddNew() Returns Type Description TElement The newly added element."
  },
  "api/OpenCollar.Extensions.Configuration.IReadOnlyConfigurationDictionary-1.html": {
    "href": "api/OpenCollar.Extensions.Configuration.IReadOnlyConfigurationDictionary-1.html",
    "title": "Interface IReadOnlyConfigurationDictionary<TElement> | API Documentation",
    "keywords": "Interface IReadOnlyConfigurationDictionary<TElement> Defines a read-only dictionary containing configuration items and keyed on the element name. Inherited Members IConfigurationDictionary<TElement>.AddCopy(String, TElement) IConfigurationDictionary<TElement>.AddNew(String) IConfigurationDictionary<TElement>.Contains(TElement) System.Collections.Generic.IDictionary<System.String, TElement>.Add(System.String, TElement) System.Collections.Generic.IDictionary<System.String, TElement>.ContainsKey(System.String) System.Collections.Generic.IDictionary<System.String, TElement>.Remove(System.String) System.Collections.Generic.IDictionary<System.String, TElement>.TryGetValue(System.String, TElement) System.Collections.Generic.IDictionary<System.String, TElement>.Item[System.String] System.Collections.Generic.IDictionary<System.String, TElement>.Keys System.Collections.Generic.IDictionary<System.String, TElement>.Values System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, TElement>>.Add(System.Collections.Generic.KeyValuePair<System.String, TElement>) System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, TElement>>.Clear() System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, TElement>>.Contains(System.Collections.Generic.KeyValuePair<System.String, TElement>) System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, TElement>>.CopyTo(System.Collections.Generic.KeyValuePair<System.String, TElement>[], System.Int32) System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, TElement>>.Remove(System.Collections.Generic.KeyValuePair<System.String, TElement>) System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, TElement>>.Count System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, TElement>>.IsReadOnly System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, TElement>>.GetEnumerator() System.Collections.IEnumerable.GetEnumerator() Namespace : OpenCollar.Extensions.Configuration Assembly : OpenCollar.Extensions.Configuration.dll Syntax public interface IReadOnlyConfigurationDictionary<TElement> : IConfigurationDictionary<TElement>, IDictionary<string, TElement>, ICollection<KeyValuePair<string, TElement>>, INotifyCollectionChanged, IReadOnlyDictionary<string, TElement>, IReadOnlyCollection<KeyValuePair<string, TElement>>, IEnumerable<KeyValuePair<string, TElement>>, IEnumerable Type Parameters Name Description TElement The type of the elements contained in the dictionary. See Also IConfigurationDictionary <TElement>"
  },
  "api/OpenCollar.Extensions.Configuration.PathAttribute.html": {
    "href": "api/OpenCollar.Extensions.Configuration.PathAttribute.html",
    "title": "Class PathAttribute | API Documentation",
    "keywords": "Class PathAttribute Defines an attribute used to indicate the path to the configuration value(s) underlying a class or individual property. Inheritance System.Object System.Attribute PathAttribute Inherited Members System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenCollar.Extensions.Configuration Assembly : OpenCollar.Extensions.Configuration.dll Syntax [AttributeUsage(AttributeTargets.Class | AttributeTargets.Property)] public sealed class PathAttribute : Attribute Constructors | Improve this Doc View Source PathAttribute(PathIs, String) Initializes a new instance of the PathAttribute class. Declaration public PathAttribute(PathIs usage, string path) Parameters Type Name Description PathIs usage The usage. System.String path The path. Exceptions Type Condition System.ArgumentException path must contain a valid path or fragment of a path. System.ArgumentOutOfRangeException usage does not contain a valid value. See Also System.Attribute"
  },
  "api/OpenCollar.Extensions.Configuration.ConfigurationAttribute.html": {
    "href": "api/OpenCollar.Extensions.Configuration.ConfigurationAttribute.html",
    "title": "Class ConfigurationAttribute | API Documentation",
    "keywords": "Class ConfigurationAttribute An attribute that can be used to specify the default value to return if no value is defined in the configuration root. Inheritance System.Object System.Attribute ConfigurationAttribute Inherited Members System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenCollar.Extensions.Configuration Assembly : OpenCollar.Extensions.Configuration.dll Syntax [AttributeUsage(AttributeTargets.Property)] public sealed class ConfigurationAttribute : Attribute Constructors | Improve this Doc View Source ConfigurationAttribute() Initializes a new instance of the ConfigurationAttribute class. Declaration public ConfigurationAttribute() Properties | Improve this Doc View Source DefaultValue Gets the default value. Declaration public object DefaultValue { get; set; } Property Value Type Description System.Object The default value to return if no value is defined in the configuration root. Can be null . | Improve this Doc View Source Persistence Gets or sets the policy for when to load and save values from the configuration service. Declaration public ConfigurationPersistenceActions Persistence { get; set; } Property Value Type Description ConfigurationPersistenceActions The policy for when to load and save values from the configuration service. See Also System.Attribute"
  },
  "api/OpenCollar.Extensions.Configuration.IReadOnlyConfigurationCollection-1.html": {
    "href": "api/OpenCollar.Extensions.Configuration.IReadOnlyConfigurationCollection-1.html",
    "title": "Interface IReadOnlyConfigurationCollection<TElement> | API Documentation",
    "keywords": "Interface IReadOnlyConfigurationCollection<TElement> Represents a read-only collection of values stored in a property. Inherited Members IConfigurationCollection<TElement>.AddCopy(TElement) IConfigurationCollection<TElement>.AddNew() System.Collections.Generic.IList<TElement>.IndexOf(TElement) System.Collections.Generic.IList<TElement>.Insert(System.Int32, TElement) System.Collections.Generic.IList<TElement>.RemoveAt(System.Int32) System.Collections.Generic.IList<TElement>.Item[System.Int32] System.Collections.Generic.ICollection<TElement>.Add(TElement) System.Collections.Generic.ICollection<TElement>.Clear() System.Collections.Generic.ICollection<TElement>.Contains(TElement) System.Collections.Generic.ICollection<TElement>.CopyTo(TElement[], System.Int32) System.Collections.Generic.ICollection<TElement>.Remove(TElement) System.Collections.Generic.ICollection<TElement>.Count System.Collections.Generic.ICollection<TElement>.IsReadOnly System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged System.Collections.Generic.IEnumerable<TElement>.GetEnumerator() Namespace : OpenCollar.Extensions.Configuration Assembly : OpenCollar.Extensions.Configuration.dll Syntax public interface IReadOnlyConfigurationCollection<TElement> : IConfigurationCollection<TElement>, IList<TElement>, ICollection<TElement>, INotifyCollectionChanged, IReadOnlyCollection<TElement>, IEnumerable<TElement>, IEnumerable Type Parameters Name Description TElement The type of the array element. This must be nullable if the type is a reference type and can be null . See Also System.Collections.Generic.IReadOnlyCollection`1 System.Collections.Generic.IReadOnlyCollection`1 IConfigurationCollection <TElement>"
  },
  "api/OpenCollar.Extensions.Configuration.InvalidPropertyException.html": {
    "href": "api/OpenCollar.Extensions.Configuration.InvalidPropertyException.html",
    "title": "Class InvalidPropertyException | API Documentation",
    "keywords": "Class InvalidPropertyException An exception thrown when a property is incorrectly defined.. Inheritance System.Object System.Exception InvalidPropertyException Implements System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetBaseException() System.Exception.GetType() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : OpenCollar.Extensions.Configuration Assembly : OpenCollar.Extensions.Configuration.dll Syntax [Serializable] public class InvalidPropertyException : Exception, ISerializable Constructors | Improve this Doc View Source InvalidPropertyException() Initializes a new instance of the InvalidPropertyException class. Declaration public InvalidPropertyException() | Improve this Doc View Source InvalidPropertyException(SerializationInfo, StreamingContext) Initializes a new instance of the InvalidPropertyException class. Declaration protected InvalidPropertyException(SerializationInfo info, StreamingContext context) Parameters Type Name Description System.Runtime.Serialization.SerializationInfo info The System.Runtime.Serialization.SerializationInfo that holds the serialized object data about the exception being thrown. System.Runtime.Serialization.StreamingContext context The System.Runtime.Serialization.StreamingContext that contains contextual information about the source or destination. | Improve this Doc View Source InvalidPropertyException(String) Initializes a new instance of the InvalidPropertyException class. Declaration public InvalidPropertyException(string message) Parameters Type Name Description System.String message The message that describes the error. | Improve this Doc View Source InvalidPropertyException(String, Exception) Initializes a new instance of the InvalidPropertyException class. Declaration public InvalidPropertyException(string message, Exception innerException) Parameters Type Name Description System.String message The error message that explains the reason for the exception. System.Exception innerException The exception that is the cause of the current exception, or null if no inner exception is specified. | Improve this Doc View Source InvalidPropertyException(String, String) Initializes a new instance of the InvalidPropertyException class. Declaration public InvalidPropertyException(string propertyName, string message) Parameters Type Name Description System.String propertyName The property name and parent type name of the property affected. System.String message The message that describes the error. | Improve this Doc View Source InvalidPropertyException(String, String, Exception) Initializes a new instance of the InvalidPropertyException class. Declaration public InvalidPropertyException(string propertyName, string message, Exception innerException) Parameters Type Name Description System.String propertyName The property name and parent type name of the property affected. System.String message The error message that explains the reason for the exception. System.Exception innerException The exception that is the cause of the current exception, or null if no inner exception is specified. Properties | Improve this Doc View Source PropertyName Gets or sets the property name and parent type name of the property affected. Declaration public string PropertyName { get; set; } Property Value Type Description System.String The property name and parent type name of the property affected. Methods | Improve this Doc View Source GetObjectData(SerializationInfo, StreamingContext) When overridden in a derived class, sets the System.Runtime.Serialization.SerializationInfo with information about the exception. Declaration public override void GetObjectData(SerializationInfo info, StreamingContext context) Parameters Type Name Description System.Runtime.Serialization.SerializationInfo info The System.Runtime.Serialization.SerializationInfo that holds the serialized object data about the exception being thrown. System.Runtime.Serialization.StreamingContext context The System.Runtime.Serialization.StreamingContext that contains contextual information about the source or destination. Overrides System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) Exceptions Type Condition System.ArgumentNullException info is null . Implements System.Runtime.Serialization.ISerializable See Also System.Exception"
  },
  "api/OpenCollar.Extensions.Configuration.ConfigurationPersistenceActions.html": {
    "href": "api/OpenCollar.Extensions.Configuration.ConfigurationPersistenceActions.html",
    "title": "Enum ConfigurationPersistenceActions | API Documentation",
    "keywords": "Enum ConfigurationPersistenceActions Defines the behavior of loading or saving for are particular property. Namespace : OpenCollar.Extensions.Configuration Assembly : OpenCollar.Extensions.Configuration.dll Syntax [Flags] public enum ConfigurationPersistenceActions Fields Name Description Ignore Values will be neither loaded nor saved. LoadAndSave Values are loaded from the configuration service and changes are saved back to the configuration service. LoadOnly Values are loaded from the configuration service, but changes are never saved back to the configuration service. SaveOnly Values are never loaded from the configuration service, but changes are saved back to the configuration service."
  },
  "api/OpenCollar.Extensions.Configuration.html": {
    "href": "api/OpenCollar.Extensions.Configuration.html",
    "title": "Namespace OpenCollar.Extensions.Configuration | API Documentation",
    "keywords": "Namespace OpenCollar.Extensions.Configuration Classes ConfigurationAttribute An attribute that can be used to specify the default value to return if no value is defined in the configuration root. ConfigurationException An exception thrown when an error occurs during the reading or writing of configuration. ConfigurationObjectComparer A comparer for objects that implement interfaces derived from IConfigurationObject . InvalidPropertyException An exception thrown when a property is incorrectly defined.. PathAttribute Defines an attribute used to indicate the path to the configuration value(s) underlying a class or individual property. ServiceCollectionExtensions Extensions to the Microsoft.Extensions.DependencyInjection.IServiceCollection type allowing configuration objects to be registered. TypeMismatchException An exception thrown when an object of the wrong type is added to a collection or assigned to a property. Interfaces IConfigurationCollection<TElement> Represents a collection of values stored in a property. IConfigurationDictionary<TElement> Defines a dictionary containing configuration items and keyed on the element name. IConfigurationObject The interface from which all configuration objects are derived. IReadOnlyConfigurationCollection<TElement> Represents a read-only collection of values stored in a property. IReadOnlyConfigurationDictionary<TElement> Defines a read-only dictionary containing configuration items and keyed on the element name. Enums ConfigurationPersistenceActions Defines the behavior of loading or saving for are particular property. PathIs An enumeration of the ways in which the string supplied to the PathAttribute attribute can be used to create a full path."
  },
  "api/OpenCollar.Extensions.Configuration.ServiceCollectionExtensions.html": {
    "href": "api/OpenCollar.Extensions.Configuration.ServiceCollectionExtensions.html",
    "title": "Class ServiceCollectionExtensions | API Documentation",
    "keywords": "Class ServiceCollectionExtensions Extensions to the Microsoft.Extensions.DependencyInjection.IServiceCollection type allowing configuration objects to be registered. Inheritance System.Object ServiceCollectionExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenCollar.Extensions.Configuration Assembly : OpenCollar.Extensions.Configuration.dll Syntax public static class ServiceCollectionExtensions Methods | Improve this Doc View Source AddConfigurationReader<TConfigurationObject>(IServiceCollection) Add a new kind of configuration reader that represents values taken directly from the Microsoft.Extensions.Configuration.IConfigurationRoot object in the service collection. Declaration public static void AddConfigurationReader<TConfigurationObject>(this IServiceCollection serviceCollection) where TConfigurationObject : IConfigurationObject Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection The service collection to which to add the configuration reader. This must not be null . Type Parameters Name Description TConfigurationObject The interface through which consumers will access the configuration. This must be derived from the IConfigurationObject interface."
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "OpenCollar.Extensions.Configuration | API Documentation",
    "keywords": "OpenCollar.Extensions.Configuration Support for automatic validation, update and strongly-typed access to configuration. NuGet Package Installation Package and installation instructions at: https://www.nuget.org/packages/OpenCollar.Extensions.Configuration/"
  },
  "index.html": {
    "href": "index.html",
    "title": "OpenCollar.Extensions.Configuration | API Documentation",
    "keywords": "OpenCollar.Extensions.Configuration Support for automatic validation, update and strongly-typed access to configuration. NuGet Package Package and installation instructions at: https://www.nuget.org/packages/OpenCollar.Extensions.Configuration/ Project Latest Build: Source Code on GitHub Issue Tracking on GitHub Documentation on GitHub Pages Usage The primary purpose of the libarary is to provide a strongly typed, validated wrapper around the values exposed as key/value pairs by configuration providers in the Microsoft.Extensions.Configuration library. The starting point is to define an interface through which to read your configuration. The interface must derive from IConfigurationObject . The interfaces must be public. For example: public interface IEnvironment : IConfigurationObject { public string EnvironmentName { get; } public string Version { get; } } public interface IMyConfig : IConfigurationObject { public IEnvironment Environment { get; } public string ReadOnlyString { get; } public string ReadWriteString { get; } } The next step is to register the interface as a service in Startup.cs . At the same time the IConfigurationRoot object for the application must also be registered as a service. public class Startup { private readonly IConfigurationRoot _configuration; public Startup(IConfiguration configuration) { // Capture the configuration object passed in when the application is started. _configuration = (IConfigurationRoot)configuration; } public void ConfigureServices(IServiceCollection services) { services.AddRazorPages(); services.AddSingleton(_configuration); services.AddConfigurationReader<IMyConfig>(); } ... } Later, when needed the configuration reader will be available as a service: public MyConstructor(IMyConfig config) { var version = config.Environment.Version; } Events Any object returned implements the INotifyPropertyChanged interface, allowing for changes to properties (whether from the underlying configuration or from property changes made by code) to be detected. Similary collections and dictionaries implement the INotifyCollectionChanged interface, similarly allowing changes to be detected, regardless of origin. Attributes Fine control over properties is provided by three attributes: ConfigurationAttribute - basic control over default value, loading and saving. PathAttribute - the naming and path to the underlying configuration key."
  },
  "api/OpenCollar.Extensions.Configuration.ConfigurationException.html": {
    "href": "api/OpenCollar.Extensions.Configuration.ConfigurationException.html",
    "title": "Class ConfigurationException | API Documentation",
    "keywords": "Class ConfigurationException An exception thrown when an error occurs during the reading or writing of configuration. Inheritance System.Object System.Exception ConfigurationException TypeMismatchException Implements System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetBaseException() System.Exception.GetType() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : OpenCollar.Extensions.Configuration Assembly : OpenCollar.Extensions.Configuration.dll Syntax [Serializable] public class ConfigurationException : Exception, ISerializable Constructors | Improve this Doc View Source ConfigurationException() Initializes a new instance of the ConfigurationException class. Declaration public ConfigurationException() | Improve this Doc View Source ConfigurationException(SerializationInfo, StreamingContext) Initializes a new instance of the ConfigurationException class. Declaration protected ConfigurationException(SerializationInfo info, StreamingContext context) Parameters Type Name Description System.Runtime.Serialization.SerializationInfo info The System.Runtime.Serialization.SerializationInfo that holds the serialized object data about the exception being thrown. System.Runtime.Serialization.StreamingContext context The System.Runtime.Serialization.StreamingContext that contains contextual information about the source or destination. | Improve this Doc View Source ConfigurationException(String) Initializes a new instance of the ConfigurationException class. Declaration public ConfigurationException(string message) Parameters Type Name Description System.String message The message that describes the error. | Improve this Doc View Source ConfigurationException(String, Exception) Initializes a new instance of the ConfigurationException class. Declaration public ConfigurationException(string message, Exception innerException) Parameters Type Name Description System.String message The error message that explains the reason for the exception. System.Exception innerException The exception that is the cause of the current exception, or null if no inner exception is specified. | Improve this Doc View Source ConfigurationException(String, String) Initializes a new instance of the ConfigurationException class. Declaration public ConfigurationException(string configurationPath, string message) Parameters Type Name Description System.String configurationPath The path to the configuration affected. System.String message The message that describes the error. | Improve this Doc View Source ConfigurationException(String, String, Exception) Initializes a new instance of the ConfigurationException class. Declaration public ConfigurationException(string configurationPath, string message, Exception innerException) Parameters Type Name Description System.String configurationPath The path to the configuration affected. System.String message The error message that explains the reason for the exception. System.Exception innerException The exception that is the cause of the current exception, or null if no inner exception is specified. Properties | Improve this Doc View Source ConfigurationPath Gets or sets the path to the configuration affected. Declaration public string ConfigurationPath { get; set; } Property Value Type Description System.String The path to the configuration affected. Methods | Improve this Doc View Source GetObjectData(SerializationInfo, StreamingContext) When overridden in a derived class, sets the System.Runtime.Serialization.SerializationInfo with information about the exception. Declaration public override void GetObjectData(SerializationInfo info, StreamingContext context) Parameters Type Name Description System.Runtime.Serialization.SerializationInfo info The System.Runtime.Serialization.SerializationInfo that holds the serialized object data about the exception being thrown. System.Runtime.Serialization.StreamingContext context The System.Runtime.Serialization.StreamingContext that contains contextual information about the source or destination. Overrides System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) Exceptions Type Condition System.ArgumentNullException info is null . Implements System.Runtime.Serialization.ISerializable See Also System.Exception"
  },
  "api/OpenCollar.Extensions.Configuration.PathIs.html": {
    "href": "api/OpenCollar.Extensions.Configuration.PathIs.html",
    "title": "Enum PathIs | API Documentation",
    "keywords": "Enum PathIs An enumeration of the ways in which the string supplied to the PathAttribute attribute can be used to create a full path. Namespace : OpenCollar.Extensions.Configuration Assembly : OpenCollar.Extensions.Configuration.dll Syntax public enum PathIs Fields Name Description Root The path is treated as a root and any previous context is ignored. Suffix The path is treated as a suffix to be applied (as part of colon delimited list) to the existing path context. Unknown The usage of the path is unknown or undefined. Use of this value will usually result in an error; it is provided to as sentinel to detect accidental usages."
  },
  "usage/control.html": {
    "href": "usage/control.html",
    "title": "Fine Control | API Documentation",
    "keywords": "Fine Control Fine control over properties is provided by three attributes: ConfigurationAttribute - basic control over default value, loading and saving. PathAttribute - the naming and path to the underlying configuration key. Configuration Attribute Path Attribute"
  },
  "usage/persist.html": {
    "href": "usage/persist.html",
    "title": "Persistence | API Documentation",
    "keywords": "Persistence Later, when needed, the configuration reader is available as a service: public MyConstructor(IMyConfig config) { var version = config.Environment.Version; } Save Load Delete"
  },
  "usage/index.html": {
    "href": "usage/index.html",
    "title": "Basics | API Documentation",
    "keywords": "Basics The purpose of the libarary is to provide a strongly typed, validated wrapper around the values exposed as key/value pairs by configuration providers in the Microsoft.Extensions.Configuration library. The starting point is to define an interface through which to read your configuration. The interface must derive from IConfigurationObject . The interfaces must be public. For example: public interface IEnvironment : IConfigurationObject { public string EnvironmentName { get; } public string Version { get; } } public interface IMyConfig : IConfigurationObject { public IEnvironment Environment { get; } public string ReadOnlyString { get; } public string ReadWriteString { get; } } The next step is to register the interface as a service in Startup.cs . At the same time the IConfigurationRoot object for the application must also be registered as a service. public class Startup { private readonly IConfigurationRoot _configuration; public Startup(IConfiguration configuration) { // Capture the configuration object passed in when the application is started. _configuration = (IConfigurationRoot)configuration; } public void ConfigureServices(IServiceCollection services) { services.AddRazorPages(); services.AddSingleton(_configuration); services.AddConfigurationReader<IMyConfig>(); } ... } Later, when needed, the configuration reader is available as a service: public MyConstructor(IMyConfig config) { var version = config.Environment.Version; } Events Any object returned implements the INotifyPropertyChanged interface, allowing for changes to properties (whether from the underlying configuration or from property changes made by code) to be detected. Similary collections and dictionaries implement the INotifyCollectionChanged interface, similarly allowing changes to be detected, regardless of origin. See \" Events \" for a more detailed review of the events and when they are raised. Fine Contol Fine control over properties is provided by three attributes: ConfigurationAttribute - basic control over default value, loading and saving. PathAttribute - the naming and path to the underlying configuration key. The \" Fine Control \" article looks in more depth at how attributes can be used to control the way in which configuration data is used."
  },
  "usage/props.html": {
    "href": "usage/props.html",
    "title": "Properties | API Documentation",
    "keywords": "Properties The starting point is to define an interface through which to read your configuration. The interface must derive from IConfigurationObject . The interfaces must be public. For example: public interface IEnvironment : IConfigurationObject { public string EnvironmentName { get; } public string Version { get; } } public interface IMyConfig : IConfigurationObject { public IEnvironment Environment { get; } public string ReadOnlyString { get; } public string ReadWriteString { get; } } Read-only Read-write Configuration Object Values"
  },
  "usage/events.html": {
    "href": "usage/events.html",
    "title": "Events | API Documentation",
    "keywords": "Events Any object returned implements the INotifyPropertyChanged interface, allowing for changes to properties (whether from the underlying configuration or from property changes made by code) to be detected. Similary collections and dictionaries implement the INotifyCollectionChanged interface, similarly allowing changes to be detected, regardless of origin. Property Change Events Collection Change Events"
  },
  "usage/types.html": {
    "href": "usage/types.html",
    "title": "Types | API Documentation",
    "keywords": "Types Configuration Objects Collections Dictionaries \"Naive\" Types"
  }
}