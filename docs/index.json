{
  "api/index.html": {
    "href": "api/index.html",
    "title": "OpenCollar.Extensions.Configuration | API Documentation",
    "keywords": "OpenCollar.Extensions.Configuration Support for automatic validation, update and strongly-typed access to configuration. API Documentation"
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "OpenCollar.Extensions.Configuration | API Documentation",
    "keywords": "OpenCollar.Extensions.Configuration Support for automatic validation, update and strongly-typed access to configuration. Introduction"
  },
  "index.html": {
    "href": "index.html",
    "title": "Where to Start | API Documentation",
    "keywords": "Support for automatic validation, update and strongly-typed access to configuration. Where to Start The starting point is to define an interface through which to read your configuration and add a reader in Startup.cs : // This method gets called by the runtime. Use this method to add services to the container. public void ConfigureServices(IServiceCollection services) { services.AddRazorPages(); services.AddConfigurationReader<IMyConfig>(); } Later, when needed the configuration reader will be available as a service: public MyConstructor(IMyConfig config) { // Your config is available through the interface you defined in IMyConfig, strongly typed and validated. } Project Project Resources Source Code Issue Tracking GitHub Pages Build Status"
  },
  "api/OpenCollar.Extensions.Configuration.TEMP.ITempObject.html": {
    "href": "api/OpenCollar.Extensions.Configuration.TEMP.ITempObject.html",
    "title": "Interface ITempObject | API Documentation",
    "keywords": "Interface ITempObject Namespace : OpenCollar.Extensions.Configuration.TEMP Assembly : OpenCollar.Extensions.Configuration.dll Syntax public interface ITempObject Properties | Improve this Doc View Source ReadOnlyNotNullInt32Property Declaration int ReadOnlyNotNullInt32Property { get; } Property Value Type Description System.Int32 | Improve this Doc View Source ReadOnlyNotNullStringProperty Declaration string ReadOnlyNotNullStringProperty { get; } Property Value Type Description System.String | Improve this Doc View Source ReadOnlyNullableInt32Property Declaration int? ReadOnlyNullableInt32Property { get; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source ReadOnlyNullableStringProperty Declaration string ReadOnlyNullableStringProperty { get; } Property Value Type Description System.String | Improve this Doc View Source ReadWriteNotNullInt32Property Declaration int ReadWriteNotNullInt32Property { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source ReadWriteNotNullStringProperty Declaration string ReadWriteNotNullStringProperty { get; set; } Property Value Type Description System.String | Improve this Doc View Source ReadWriteNullableInt32Property Declaration int? ReadWriteNullableInt32Property { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source ReadWriteNullableStringProperty Declaration string ReadWriteNullableStringProperty { get; set; } Property Value Type Description System.String"
  },
  "api/OpenCollar.Extensions.Configuration.Collections.ConfigurationDictionaryBase-2.html": {
    "href": "api/OpenCollar.Extensions.Configuration.Collections.ConfigurationDictionaryBase-2.html",
    "title": "Class ConfigurationDictionaryBase<TKey, TElement> | API Documentation",
    "keywords": "Class ConfigurationDictionaryBase<TKey, TElement> A base class provide the functionality used by both dictionaries and collections. Inheritance System.Object Disposable ConfigurationDictionaryBase<TKey, TElement> Implements System.Collections.IEnumerable System.Collections.Specialized.INotifyCollectionChanged IConfigurationObject System.IDisposable System.ComponentModel.INotifyPropertyChanged Inherited Members Disposable.IsDisposed Disposable.Dispose() Disposable.EnforceDisposed() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenCollar.Extensions.Configuration.Collections Assembly : OpenCollar.Extensions.Configuration.dll Syntax public abstract class ConfigurationDictionaryBase<TKey, TElement> : Disposable, IEnumerable, INotifyCollectionChanged, IConfigurationObject, IDisposable, INotifyPropertyChanged where TElement : IConfigurationObject Type Parameters Name Description TKey The type of the key. TElement The type of the element. Constructors | Improve this Doc View Source ConfigurationDictionaryBase(PropertyDef) Initializes a new instance of the ConfigurationDictionaryBase<TKey, TElement> class. Declaration protected ConfigurationDictionaryBase(PropertyDef propertyDef) Parameters Type Name Description PropertyDef propertyDef The definition of the property defined by this object. | Improve this Doc View Source ConfigurationDictionaryBase(PropertyDef, IEnumerable<KeyValuePair<TKey, TElement>>) Initializes a new instance of the ConfigurationDictionaryBase<TKey, TElement> class. Declaration protected ConfigurationDictionaryBase(PropertyDef propertyDef, IEnumerable<KeyValuePair<TKey, TElement>> elements) Parameters Type Name Description PropertyDef propertyDef The definition of the property defined by this object. System.Collections.Generic.IEnumerable < System.Collections.Generic.KeyValuePair <TKey, TElement>> elements The elements with which to initialize to the collection. Properties | Improve this Doc View Source Count Gets the number of elements contained in the System.Collections.Generic.ICollection<T> . Declaration public int Count { get; } Property Value Type Description System.Int32 The number of elements contained in the System.Collections.Generic.ICollection<T> . Exceptions Type Condition System.ObjectDisposedException This method cannot be used after the object has been disposed of. | Improve this Doc View Source DisableEvents Gets or sets a value indicating whether events are raised for changes. Declaration protected bool DisableEvents { get; set; } Property Value Type Description System.Boolean true if change events are disabled; otherwise, false . | Improve this Doc View Source InnerCount Gets the number of elements contained in the System.Collections.Generic.ICollection<T> . Declaration protected int InnerCount { get; } Property Value Type Description System.Int32 The number of elements contained in the System.Collections.Generic.ICollection<T> . Remarks Assumes that the caller already holds a read or write lock. | Improve this Doc View Source IsDirty Gets a value indicating whether this object has any properties with unsaved changes. Declaration public bool IsDirty { get; } Property Value Type Description System.Boolean true if this object has any properties with unsaved changes; otherwise, false . Exceptions Type Condition System.ObjectDisposedException This method cannot be used after the object has been disposed of. | Improve this Doc View Source IsReadOnly Gets a value indicating whether the System.Collections.Generic.ICollection<T> is read-only. Declaration public abstract bool IsReadOnly { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Item[TKey] Gets or sets the item with the specified key. Declaration public TElement this[TKey key] { get; set; } Parameters Type Name Description TKey key The key identifying the element to get or set. Property Value Type Description TElement The item to get or set. Exceptions Type Condition System.ArgumentOutOfRangeException key did not identify a valid element. System.NotImplementedException This collection is read-only. System.ObjectDisposedException This method cannot be used after the object has been disposed of. | Improve this Doc View Source Keys Gets an System.Collections.Generic.ICollection<T> containing the keys of the System.Collections.Generic.IDictionary<TKey, TValue> . Declaration public ICollection<TKey> Keys { get; } Property Value Type Description System.Collections.Generic.ICollection <TKey> Exceptions Type Condition System.ObjectDisposedException This method cannot be used after the object has been disposed of. | Improve this Doc View Source Lock Gets the lock object used to control concurrent access to the collection. Declaration protected ReaderWriterLockSlim Lock { get; } Property Value Type Description System.Threading.ReaderWriterLockSlim The lock object used to control concurrent access to the collection. | Improve this Doc View Source OrderedItems Gets the items in the dictionary as an ordered, read-only list. Declaration protected IReadOnlyList<KeyValuePair<TKey, TElement>> OrderedItems { get; } Property Value Type Description System.Collections.Generic.IReadOnlyList < System.Collections.Generic.KeyValuePair <TKey, TElement>> The items in the dictionary as an ordered, read-only list. | Improve this Doc View Source PropertyDef Gets the definition of this property object. Declaration public PropertyDef PropertyDef { get; } Property Value Type Description PropertyDef The definition of this property object. | Improve this Doc View Source SetValueUsingKeyFirst Gets a value indicating whether to set values using the key first. Declaration protected virtual bool SetValueUsingKeyFirst { get; } Property Value Type Description System.Boolean true if set value using key first; otherwise to value first, false . | Improve this Doc View Source Values Gets an System.Collections.Generic.ICollection<T> containing the values in the System.Collections.Generic.IDictionary<TKey, TValue> . Declaration public ICollection<TElement> Values { get; } Property Value Type Description System.Collections.Generic.ICollection <TElement> Exceptions Type Condition System.ObjectDisposedException This method cannot be used after the object has been disposed of. Methods | Improve this Doc View Source Add(TKey, TElement) Adds an element with the provided key and value to the System.Collections.Generic.IDictionary<TKey, TValue> . Declaration public virtual void Add(TKey key, TElement value) Parameters Type Name Description TKey key The object to use as the key of the element to add. TElement value The object to use as the value of the element to add. | Improve this Doc View Source Add(KeyValuePair<TKey, TElement>) Adds an item to the System.Collections.Generic.ICollection<T> . Declaration public void Add(KeyValuePair<TKey, TElement> item) Parameters Type Name Description System.Collections.Generic.KeyValuePair <TKey, TElement> item The object to add to the System.Collections.Generic.ICollection<T> . Exceptions Type Condition System.NotImplementedException This collection is read-only. System.ObjectDisposedException This method cannot be used after the object has been disposed of. | Improve this Doc View Source Clear() Removes all items from the System.Collections.Generic.ICollection<T> . Declaration public void Clear() Exceptions Type Condition System.NotImplementedException This collection is read-only. System.ObjectDisposedException This method cannot be used after the object has been disposed of. | Improve this Doc View Source ContainsKey(TKey) Determines whether the System.Collections.Generic.IDictionary<TKey, TValue> contains an element with the specified key. Declaration public bool ContainsKey(TKey key) Parameters Type Name Description TKey key The key to locate in the System.Collections.Generic.IDictionary<TKey, TValue> . Returns Type Description System.Boolean true if the System.Collections.Generic.IDictionary<TKey, TValue> contains an element with the key; otherwise, false . Exceptions Type Condition System.ObjectDisposedException This method cannot be used after the object has been disposed of. | Improve this Doc View Source ContainsValue(TElement) Determines whether this instance contains the object. Declaration protected bool ContainsValue(TElement item) Parameters Type Name Description TElement item The object to locate in the System.Collections.Generic.ICollection<T> . Returns Type Description System.Boolean true if item is found in the System.Collections.Generic.ICollection<T> ; otherwise, false . | Improve this Doc View Source CopyTo(KeyValuePair<TKey, TElement>[], Int32) Copies the elements of the System.Collections.Generic.ICollection<T> to an System.Array , starting at a particular System.Array index. Declaration public void CopyTo(KeyValuePair<TKey, TElement>[] array, int arrayIndex) Parameters Type Name Description System.Collections.Generic.KeyValuePair <TKey, TElement>[] array The one-dimensional System.Array that is the destination of the elements copied from System.Collections.Generic.ICollection<T> . The System.Array must have zero-based indexing. System.Int32 arrayIndex The zero-based index in array at which copying begins. | Improve this Doc View Source Dispose(Boolean) Releases unmanaged and - optionally - managed resources. Declaration protected override void Dispose(bool disposing) Parameters Type Name Description System.Boolean disposing true to release both managed and unmanaged resources; false to release only unmanaged resources. Overrides Disposable.Dispose(Boolean) | Improve this Doc View Source GetIndexedElements(IEnumerable<TElement>) Converts the elements from the stream given into a stream of key-value pairs. Declaration protected static IEnumerable<KeyValuePair<int, TElement>> GetIndexedElements(IEnumerable<TElement> elements) Parameters Type Name Description System.Collections.Generic.IEnumerable <TElement> elements The elements to convery. Returns Type Description System.Collections.Generic.IEnumerable < System.Collections.Generic.KeyValuePair < System.Int32 , TElement>> A stream of key-value pairs, initialized from the sequence given, with the key derived from each elements position in the sequence. | Improve this Doc View Source GetKeyedElements(IEnumerable<TElement>) Converts the elements from the stream given into a stream of key-value pairs. Declaration protected static IEnumerable<KeyValuePair<string, TElement>> GetKeyedElements(IEnumerable<TElement> elements) Parameters Type Name Description System.Collections.Generic.IEnumerable <TElement> elements The elements to convery. Returns Type Description System.Collections.Generic.IEnumerable < System.Collections.Generic.KeyValuePair < System.String , TElement>> A stream of key-value pairs, initialized from the sequence given, with the key derived from each elements property name. | Improve this Doc View Source InnerCopyTo(KeyValuePair<TKey, TElement>[], Int32) Copies the elements of the System.Collections.Generic.ICollection<T> to an System.Array , starting at a particular System.Array index. Declaration protected void InnerCopyTo(KeyValuePair<TKey, TElement>[] array, int arrayIndex) Parameters Type Name Description System.Collections.Generic.KeyValuePair <TKey, TElement>[] array The one-dimensional System.Array that is the destination of the elements copied from System.Collections.Generic.ICollection<T> . The System.Array must have zero-based indexing. System.Int32 arrayIndex The zero-based index in array at which copying begins. Remarks Assumes the caller already holds a read or write lock. | Improve this Doc View Source OnCollectionChanged(NotifyCollectionChangedEventArgs) Called when the collection has changed. Declaration protected void OnCollectionChanged(NotifyCollectionChangedEventArgs args) Parameters Type Name Description System.Collections.Specialized.NotifyCollectionChangedEventArgs args The System.Collections.Specialized.NotifyCollectionChangedEventArgs instance defining the change. | Improve this Doc View Source Reload() Loads all of the properties from the configuration sources, overwriting any unsaved changes. Declaration public void Reload() Exceptions Type Condition System.NotImplementedException | Improve this Doc View Source Remove(TKey) Removes the element with the specified key from the System.Collections.Generic.IDictionary<TKey, TValue> . Declaration public virtual bool Remove(TKey key) Parameters Type Name Description TKey key The key of the element to remove. Returns Type Description System.Boolean true if the element is successfully removed; otherwise, false . This method also returns false if key was not found in the original System.Collections.Generic.IDictionary<TKey, TValue> . Exceptions Type Condition System.NotImplementedException This collection is read-only. | Improve this Doc View Source Remove(TElement) Removes the first occurrence of a specific object from the System.Collections.Generic.ICollection<T> . Declaration public virtual bool Remove(TElement item) Parameters Type Name Description TElement item The object to remove from the System.Collections.Generic.ICollection<T> . Returns Type Description System.Boolean true if item was successfully removed from the System.Collections.Generic.ICollection<T> ; otherwise, false . This method also returns false if item is not found in the original System.Collections.Generic.ICollection<T> . Exceptions Type Condition System.NotImplementedException This collection is read-only. | Improve this Doc View Source Remove(KeyValuePair<TKey, TElement>) Removes the first occurrence of a specific object from the System.Collections.Generic.ICollection<T> . Declaration public bool Remove(KeyValuePair<TKey, TElement> item) Parameters Type Name Description System.Collections.Generic.KeyValuePair <TKey, TElement> item The object to remove from the System.Collections.Generic.ICollection<T> . Returns Type Description System.Boolean true if item was successfully removed from the System.Collections.Generic.ICollection<T> ; otherwise, false . This method also returns false if item is not found in the original System.Collections.Generic.ICollection<T> . Exceptions Type Condition System.NotImplementedException This collection is read-only. | Improve this Doc View Source Replace(IEnumerable<KeyValuePair<TKey, TElement>>) Replaces the contents of the dictionary. Declaration protected void Replace(IEnumerable<KeyValuePair<TKey, TElement>> list) Parameters Type Name Description System.Collections.Generic.IEnumerable < System.Collections.Generic.KeyValuePair <TKey, TElement>> list The new contents. Remarks Assumes that a write lock is held by the caller. Exceptions Type Condition System.NotImplementedException This collection is read-only. | Improve this Doc View Source Save() Saves this current values for each property back to the configuration sources. Declaration public void Save() Exceptions Type Condition System.NotImplementedException | Improve this Doc View Source TryGetValue(TKey, out TElement) Gets the value associated with the specified key. Declaration public bool TryGetValue(TKey key, out TElement value) Parameters Type Name Description TKey key The key whose value to get. TElement value When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value for the type of the value parameter. This parameter is passed uninitialized. Returns Type Description System.Boolean true if the object that implements System.Collections.Generic.IDictionary<TKey, TValue> contains an element with the specified key; otherwise, false . Events | Improve this Doc View Source CollectionChanged Occurs when the collection changes. Declaration public event NotifyCollectionChangedEventHandler CollectionChanged Event Type Type Description System.Collections.Specialized.NotifyCollectionChangedEventHandler | Improve this Doc View Source PropertyChanged Occurs when a property value changes. Declaration public event PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler Explicit Interface Implementations | Improve this Doc View Source IEnumerable.GetEnumerator() Returns an enumerator that iterates through a collection. Declaration IEnumerator IEnumerable.GetEnumerator() Returns Type Description System.Collections.IEnumerator An System.Collections.IEnumerator object that can be used to iterate through the collection. Implements System.Collections.IEnumerable System.Collections.Specialized.INotifyCollectionChanged IConfigurationObject System.IDisposable System.ComponentModel.INotifyPropertyChanged See Also IConfigurationObject System.Collections.Generic.IDictionary <TKey, TValue> System.Collections.Specialized.INotifyCollectionChanged"
  },
  "api/OpenCollar.Extensions.Configuration.PropertyDef.html": {
    "href": "api/OpenCollar.Extensions.Configuration.PropertyDef.html",
    "title": "Class PropertyDef | API Documentation",
    "keywords": "Class PropertyDef The definition of a property of a configuration object. Inheritance System.Object PropertyDef Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenCollar.Extensions.Configuration Assembly : OpenCollar.Extensions.Configuration.dll Syntax public class PropertyDef Properties | Improve this Doc View Source IsReadOnly Gets a value indicating whether this instance is read only. Declaration public bool IsReadOnly { get; } Property Value Type Description System.Boolean true if the property is read only; otherwise, false for an editable property. | Improve this Doc View Source Path Gets the colon-delimited path to the underlying configuration value. Declaration public string Path { get; } Property Value Type Description System.String The colon-delimited path to the underlying configuration value. | Improve this Doc View Source PropertyName Gets the name of the property represented by this object. Declaration public string PropertyName { get; } Property Value Type Description System.String The name of the property represented by this object. | Improve this Doc View Source Type Gets the type of the value held in the property. Declaration public Type Type { get; } Property Value Type Description System.Type The type of the value held in the property."
  },
  "api/OpenCollar.Extensions.Configuration.ConfigurationObjectBase.html": {
    "href": "api/OpenCollar.Extensions.Configuration.ConfigurationObjectBase.html",
    "title": "Class ConfigurationObjectBase | API Documentation",
    "keywords": "Class ConfigurationObjectBase A base class that allows configuration from classes in the Microsoft.Extensions.Configuration namespace to be to be accessed through a user-defined model with strongly typed interfaces. Inheritance System.Object Disposable ConfigurationObjectBase ConfigurationObjectBase<TInterface> TempObject Implements IConfigurationObject System.IDisposable System.ComponentModel.INotifyPropertyChanged Inherited Members Disposable.IsDisposed Disposable.Dispose() Disposable.EnforceDisposed() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenCollar.Extensions.Configuration Assembly : OpenCollar.Extensions.Configuration.dll Syntax public abstract class ConfigurationObjectBase : Disposable, IConfigurationObject, IDisposable, INotifyPropertyChanged Remarks For each requested model only a single instance of the model is ever constructed for a given Microsoft.Extensions.Configuration.IConfigurationSection or Microsoft.Extensions.Configuration.IConfigurationRoot . The System.ComponentModel.INotifyPropertyChanged interface is supported allowing changes to be detected and reported from both the underlying configuration source (through the source changed event) and from detected changes made to properties with a setter. Only material changes are reported, and change with no practical impact (for example assigning a new instance of a string with the same value) will not be reported. Constructors | Improve this Doc View Source ConfigurationObjectBase(IConfigurationRoot, PropertyDef) Initializes a new instance of the ConfigurationObjectBase class. Declaration protected ConfigurationObjectBase(IConfigurationRoot configurationRoot, PropertyDef propertyDef) Parameters Type Name Description Microsoft.Extensions.Configuration.IConfigurationRoot configurationRoot The configuration root from which to read and write values. PropertyDef propertyDef The definition of the property defined by this object. This can be if this object is the root of the hierarchy. | Improve this Doc View Source ConfigurationObjectBase(IConfigurationRoot, IEnumerable<PropertyDef>) Initializes a new instance of the ConfigurationObjectBase class. Declaration protected ConfigurationObjectBase(IConfigurationRoot configurationRoot, IEnumerable<PropertyDef> childPropertyDefs) Parameters Type Name Description Microsoft.Extensions.Configuration.IConfigurationRoot configurationRoot The configuration root from which to read and write values. System.Collections.Generic.IEnumerable < PropertyDef > childPropertyDefs A sequence containing the definitions of the properties to represent. Properties | Improve this Doc View Source IsDirty Gets a value indicating whether this object has any properties with unsaved changes. Declaration public bool IsDirty { get; } Property Value Type Description System.Boolean true if this object has any properties with unsaved changes; otherwise, false . | Improve this Doc View Source Item[String] Declaration protected object this[string name] { get; set; } Parameters Type Name Description System.String name Property Value Type Description System.Object | Improve this Doc View Source PropertyDef Gets the definition of this property object. Declaration public PropertyDef PropertyDef { get; } Property Value Type Description PropertyDef The definition of this property object. Methods | Improve this Doc View Source Dispose(Boolean) Releases unmanaged and - optionally - managed resources. Declaration protected override void Dispose(bool disposing) Parameters Type Name Description System.Boolean disposing true to release both managed and unmanaged resources; false to release only unmanaged resources. Overrides Disposable.Dispose(Boolean) | Improve this Doc View Source GetDefault(Type) Returns the default value for the type specified. Declaration public static object GetDefault(Type type) Parameters Type Name Description System.Type type The type of the default value required. Returns Type Description System.Object The default value for the type specified. | Improve this Doc View Source Reload() Loads all of the properties from the configuration sources, overwriting any unsaved changes. Declaration public void Reload() | Improve this Doc View Source Save() Saves this current values for each property back to the configuration sources. Declaration public void Save() Events | Improve this Doc View Source PropertyChanged Occurs when a property changes. Declaration public event PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler Implements IConfigurationObject System.IDisposable System.ComponentModel.INotifyPropertyChanged See Also IConfigurationObject"
  },
  "api/OpenCollar.Extensions.Configuration.IConfigurationDictionary-1.html": {
    "href": "api/OpenCollar.Extensions.Configuration.IConfigurationDictionary-1.html",
    "title": "Interface IConfigurationDictionary<TElement> | API Documentation",
    "keywords": "Interface IConfigurationDictionary<TElement> Defines a dictionary containing configurtation items and keyed on the element name. Inherited Members System.Collections.Generic.IDictionary<System.String, TElement>.Add(System.String, TElement) System.Collections.Generic.IDictionary<System.String, TElement>.ContainsKey(System.String) System.Collections.Generic.IDictionary<System.String, TElement>.Remove(System.String) System.Collections.Generic.IDictionary<System.String, TElement>.TryGetValue(System.String, TElement) System.Collections.Generic.IDictionary<System.String, TElement>.Item[System.String] System.Collections.Generic.IDictionary<System.String, TElement>.Keys System.Collections.Generic.IDictionary<System.String, TElement>.Values System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, TElement>>.Add(System.Collections.Generic.KeyValuePair<System.String, TElement>) System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, TElement>>.Clear() System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, TElement>>.Contains(System.Collections.Generic.KeyValuePair<System.String, TElement>) System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, TElement>>.CopyTo(System.Collections.Generic.KeyValuePair<System.String, TElement>[], System.Int32) System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, TElement>>.Remove(System.Collections.Generic.KeyValuePair<System.String, TElement>) System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, TElement>>.Count System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, TElement>>.IsReadOnly System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, TElement>>.GetEnumerator() System.Collections.IEnumerable.GetEnumerator() System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged Namespace : OpenCollar.Extensions.Configuration Assembly : OpenCollar.Extensions.Configuration.dll Syntax public interface IConfigurationDictionary<TElement> : IDictionary<string, TElement>, ICollection<KeyValuePair<string, TElement>>, IEnumerable<KeyValuePair<string, TElement>>, IEnumerable, INotifyCollectionChanged where TElement : IConfigurationObject Type Parameters Name Description TElement The type of the elements contained in the dictionary. Methods | Improve this Doc View Source Contains(TElement) Determines whether this dictionary contains the element specified. Declaration bool Contains(TElement element) Parameters Type Name Description TElement element The element for which to check. Returns Type Description System.Boolean true if the dictionary contains the specified element; otherwise, false . See Also System.Collections.Generic.IDictionary <TKey, TValue>"
  },
  "api/OpenCollar.Extensions.Configuration.IConfigurationCollection-1.html": {
    "href": "api/OpenCollar.Extensions.Configuration.IConfigurationCollection-1.html",
    "title": "Interface IConfigurationCollection<TElement> | API Documentation",
    "keywords": "Interface IConfigurationCollection<TElement> Represents a collection of values stored in a property. Inherited Members System.Collections.Generic.IList<TElement>.IndexOf(TElement) System.Collections.Generic.IList<TElement>.Insert(System.Int32, TElement) System.Collections.Generic.IList<TElement>.RemoveAt(System.Int32) System.Collections.Generic.IList<TElement>.Item[System.Int32] System.Collections.Generic.ICollection<TElement>.Add(TElement) System.Collections.Generic.ICollection<TElement>.Clear() System.Collections.Generic.ICollection<TElement>.Contains(TElement) System.Collections.Generic.ICollection<TElement>.CopyTo(TElement[], System.Int32) System.Collections.Generic.ICollection<TElement>.Remove(TElement) System.Collections.Generic.ICollection<TElement>.Count System.Collections.Generic.ICollection<TElement>.IsReadOnly System.Collections.Generic.IEnumerable<TElement>.GetEnumerator() System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged Namespace : OpenCollar.Extensions.Configuration Assembly : OpenCollar.Extensions.Configuration.dll Syntax public interface IConfigurationCollection<TElement> : IList<TElement>, ICollection<TElement>, IEnumerable<TElement>, IEnumerable, INotifyCollectionChanged where TElement : IConfigurationObject Type Parameters Name Description TElement The type of the array element. This must be nullable if the type is a reference type and can be null ."
  },
  "api/OpenCollar.Extensions.Configuration.TEMP.TempObject.html": {
    "href": "api/OpenCollar.Extensions.Configuration.TEMP.TempObject.html",
    "title": "Class TempObject | API Documentation",
    "keywords": "Class TempObject Inheritance System.Object Disposable ConfigurationObjectBase TempObject Implements IConfigurationObject System.IDisposable System.ComponentModel.INotifyPropertyChanged ITempObject Inherited Members ConfigurationObjectBase.PropertyChanged ConfigurationObjectBase.PropertyDef ConfigurationObjectBase.IsDirty ConfigurationObjectBase.Item[String] ConfigurationObjectBase.GetDefault(Type) ConfigurationObjectBase.Reload() ConfigurationObjectBase.Save() ConfigurationObjectBase.Dispose(Boolean) Disposable.IsDisposed Disposable.Dispose() Disposable.EnforceDisposed() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenCollar.Extensions.Configuration.TEMP Assembly : OpenCollar.Extensions.Configuration.dll Syntax public class TempObject : ConfigurationObjectBase, IConfigurationObject, IDisposable, INotifyPropertyChanged, ITempObject Constructors | Improve this Doc View Source TempObject(IConfigurationRoot, IEnumerable<PropertyDef>) Declaration public TempObject(IConfigurationRoot configurationRoot, IEnumerable<PropertyDef> propertyDefs) Parameters Type Name Description Microsoft.Extensions.Configuration.IConfigurationRoot configurationRoot System.Collections.Generic.IEnumerable < PropertyDef > propertyDefs Properties | Improve this Doc View Source ReadOnlyNotNullInt32Property Declaration public int ReadOnlyNotNullInt32Property { get; } Property Value Type Description System.Int32 | Improve this Doc View Source ReadOnlyNotNullStringProperty Declaration public string ReadOnlyNotNullStringProperty { get; } Property Value Type Description System.String | Improve this Doc View Source ReadOnlyNullableInt32Property Declaration public int? ReadOnlyNullableInt32Property { get; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source ReadOnlyNullableStringProperty Declaration public string ReadOnlyNullableStringProperty { get; } Property Value Type Description System.String | Improve this Doc View Source ReadWriteNotNullInt32Property Declaration public int ReadWriteNotNullInt32Property { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source ReadWriteNotNullStringProperty Declaration public string ReadWriteNotNullStringProperty { get; set; } Property Value Type Description System.String | Improve this Doc View Source ReadWriteNullableInt32Property Declaration public int? ReadWriteNullableInt32Property { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source ReadWriteNullableStringProperty Declaration public string ReadWriteNullableStringProperty { get; set; } Property Value Type Description System.String Implements IConfigurationObject System.IDisposable System.ComponentModel.INotifyPropertyChanged ITempObject"
  },
  "api/OpenCollar.Extensions.Configuration.ReadOnlyAttribute.html": {
    "href": "api/OpenCollar.Extensions.Configuration.ReadOnlyAttribute.html",
    "title": "Class ReadOnlyAttribute | API Documentation",
    "keywords": "Class ReadOnlyAttribute An attribute that can be used to indicate that a property (especially arrays and dictionaries) should be treated as read-only. Inheritance System.Object System.Attribute ReadOnlyAttribute Inherited Members System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenCollar.Extensions.Configuration Assembly : OpenCollar.Extensions.Configuration.dll Syntax [AttributeUsage(AttributeTargets.Property)] public sealed class ReadOnlyAttribute : Attribute See Also System.Attribute"
  },
  "api/OpenCollar.Extensions.Configuration.Disposable.html": {
    "href": "api/OpenCollar.Extensions.Configuration.Disposable.html",
    "title": "Class Disposable | API Documentation",
    "keywords": "Class Disposable A base class for disposable objects. Inheritance System.Object Disposable ConfigurationDictionaryBase<TKey, TElement> ConfigurationObjectBase Implements System.IDisposable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenCollar.Extensions.Configuration Assembly : OpenCollar.Extensions.Configuration.dll Syntax public abstract class Disposable : IDisposable Properties | Improve this Doc View Source IsDisposed Gets a value indicating whether this instance has been disposed of. Declaration protected bool IsDisposed { get; } Property Value Type Description System.Boolean true if this instance is has been disposed of; otherwise, false . Methods | Improve this Doc View Source Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() | Improve this Doc View Source Dispose(Boolean) Releases unmanaged and - optionally - managed resources. Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description System.Boolean disposing true to release both managed and unmanaged resources; false to release only unmanaged resources. | Improve this Doc View Source EnforceDisposed() Throws an System.ObjectDisposedException if this object has been disposed of. Declaration protected void EnforceDisposed() Exceptions Type Condition System.ObjectDisposedException This method cannot be used after the object has been disposed of. Implements System.IDisposable See Also System.IDisposable"
  },
  "api/OpenCollar.Extensions.Configuration.ConfigurationObjectBase-1.html": {
    "href": "api/OpenCollar.Extensions.Configuration.ConfigurationObjectBase-1.html",
    "title": "Class ConfigurationObjectBase<TInterface> | API Documentation",
    "keywords": "Class ConfigurationObjectBase<TInterface> A base class that allows configuration from classes in the Microsoft.Extensions.Configuration namespace to be to be accessed through a user-defined model with strongly typed interfaces. Inheritance System.Object Disposable ConfigurationObjectBase ConfigurationObjectBase<TInterface> Implements IConfigurationObject System.IDisposable System.ComponentModel.INotifyPropertyChanged Inherited Members ConfigurationObjectBase.PropertyChanged ConfigurationObjectBase.PropertyDef ConfigurationObjectBase.IsDirty ConfigurationObjectBase.Item[String] ConfigurationObjectBase.GetDefault(Type) ConfigurationObjectBase.Reload() ConfigurationObjectBase.Save() ConfigurationObjectBase.Dispose(Boolean) Disposable.IsDisposed Disposable.Dispose() Disposable.EnforceDisposed() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenCollar.Extensions.Configuration Assembly : OpenCollar.Extensions.Configuration.dll Syntax public abstract class ConfigurationObjectBase<TInterface> : ConfigurationObjectBase, IConfigurationObject, IDisposable, INotifyPropertyChanged Type Parameters Name Description TInterface The type of the configuration interface implemented. Remarks For each requested model only a single instance of the model is ever constructed for a given Microsoft.Extensions.Configuration.IConfigurationSection or Microsoft.Extensions.Configuration.IConfigurationRoot . The System.ComponentModel.INotifyPropertyChanged interface is supported allowing changes to be detected and reported from both the underlying configuration source (through the source changed event) and from detected changes made to properties with a setter. Only material changes are reported, and change with no practical impact (for example assigning a new instance of a string with the same value) will not be reported. Constructors | Improve this Doc View Source ConfigurationObjectBase(IConfigurationRoot) Initializes a new instance of the ConfigurationObjectBase<TInterface> class. This is the interface used when creating the root instance for the service collection. Declaration protected ConfigurationObjectBase(IConfigurationRoot configurationRoot) Parameters Type Name Description Microsoft.Extensions.Configuration.IConfigurationRoot configurationRoot The configuration root from which to read and write values. | Improve this Doc View Source ConfigurationObjectBase(IConfigurationRoot, PropertyDef) Initializes a new instance of the ConfigurationObjectBase<TInterface> class. Declaration protected ConfigurationObjectBase(IConfigurationRoot configurationRoot, PropertyDef propertyDef) Parameters Type Name Description Microsoft.Extensions.Configuration.IConfigurationRoot configurationRoot The configuration root from which to read and write values. PropertyDef propertyDef The definition of the property defined by this object. This can be if this object is the root of the hierarchy. Implements IConfigurationObject System.IDisposable System.ComponentModel.INotifyPropertyChanged See Also Disposable IConfigurationObject IConfigurationObject"
  },
  "api/OpenCollar.Extensions.Configuration.TEMP.html": {
    "href": "api/OpenCollar.Extensions.Configuration.TEMP.html",
    "title": "Namespace OpenCollar.Extensions.Configuration.TEMP | API Documentation",
    "keywords": "Namespace OpenCollar.Extensions.Configuration.TEMP Classes TempObject Interfaces ITempObject"
  },
  "api/OpenCollar.Extensions.Configuration.PathAttribute.html": {
    "href": "api/OpenCollar.Extensions.Configuration.PathAttribute.html",
    "title": "Class PathAttribute | API Documentation",
    "keywords": "Class PathAttribute Defines an attribute used to indicate the path to the configuration value(s) underlying a class or individual property. Inheritance System.Object System.Attribute PathAttribute Inherited Members System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenCollar.Extensions.Configuration Assembly : OpenCollar.Extensions.Configuration.dll Syntax [AttributeUsage(AttributeTargets.Class | AttributeTargets.Property)] public sealed class PathAttribute : Attribute Constructors | Improve this Doc View Source PathAttribute(PathIs, String) Initializes a new instance of the PathAttribute class. Declaration public PathAttribute(PathIs usage, string path) Parameters Type Name Description PathIs usage The usage. System.String path The path. Exceptions Type Condition System.ArgumentException path must contain a valid path or fragment of a path. System.ArgumentOutOfRangeException usage does not contain a valid value. See Also System.Attribute"
  },
  "api/OpenCollar.Extensions.Configuration.PathIs.html": {
    "href": "api/OpenCollar.Extensions.Configuration.PathIs.html",
    "title": "Enum PathIs | API Documentation",
    "keywords": "Enum PathIs An enumeration of the ways in which the string supplied to the PathAttribute attribute can be used to create a full path. Namespace : OpenCollar.Extensions.Configuration Assembly : OpenCollar.Extensions.Configuration.dll Syntax public enum PathIs Fields Name Description Root The path is treated as a root and any previous context is ignored. Suffix The path is treated as a suffix to be applied (as part of semi-colon delited list) to the existing path context. Unknown The usage of the path is unknown or undefined. Use of this value will usually result in an error; it is provided to as sentinel to detect accidental usages."
  },
  "api/OpenCollar.Extensions.Configuration.ServiceCollectionExtensions.html": {
    "href": "api/OpenCollar.Extensions.Configuration.ServiceCollectionExtensions.html",
    "title": "Class ServiceCollectionExtensions | API Documentation",
    "keywords": "Class ServiceCollectionExtensions Extensions to the Microsoft.Extensions.DependencyInjection.IServiceCollection type allowing configuration objects to be registered. Inheritance System.Object ServiceCollectionExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenCollar.Extensions.Configuration Assembly : OpenCollar.Extensions.Configuration.dll Syntax public static class ServiceCollectionExtensions Methods | Improve this Doc View Source AddConfigurationReader<TConfigurationObject>(IServiceCollection) Add a new kind of configuration reader that represents values taken directly from the Microsoft.Extensions.Configuration.IConfigurationRoot object in the service collection. Declaration public static void AddConfigurationReader<TConfigurationObject>(this IServiceCollection serviceCollection) where TConfigurationObject : IConfigurationObject Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection The service collection to which to add the configuration reader. This must not be null . Type Parameters Name Description TConfigurationObject The interface through which consumers will access the configuration. This must be derived from the IConfigurationObject interface."
  },
  "api/OpenCollar.Extensions.Configuration.Collections.html": {
    "href": "api/OpenCollar.Extensions.Configuration.Collections.html",
    "title": "Namespace OpenCollar.Extensions.Configuration.Collections | API Documentation",
    "keywords": "Namespace OpenCollar.Extensions.Configuration.Collections Classes ConfigurationDictionaryBase<TKey, TElement> A base class provide the functionality used by both dictionaries and collections."
  },
  "api/OpenCollar.Extensions.Configuration.StructuralElementKind.html": {
    "href": "api/OpenCollar.Extensions.Configuration.StructuralElementKind.html",
    "title": "Enum StructuralElementKind | API Documentation",
    "keywords": "Enum StructuralElementKind Specifies the ways in which a property can be used to represent structural elements. Namespace : OpenCollar.Extensions.Configuration Assembly : OpenCollar.Extensions.Configuration.dll Syntax public enum StructuralElementKind Fields Name Description Array The property contains an array of elements. Dictionary The property contains a dictionary of elements. Property The element is a property that contains a single, unstructured, value. Unknown The kind of structural element is unknown or undefined. Use of this value will usually result in an error; it is provided to as sentinel to detect accidental usages."
  },
  "api/OpenCollar.Extensions.Configuration.html": {
    "href": "api/OpenCollar.Extensions.Configuration.html",
    "title": "Namespace OpenCollar.Extensions.Configuration | API Documentation",
    "keywords": "Namespace OpenCollar.Extensions.Configuration Classes ConfigurationObjectBase A base class that allows configuration from classes in the Microsoft.Extensions.Configuration namespace to be to be accessed through a user-defined model with strongly typed interfaces. ConfigurationObjectBase<TInterface> A base class that allows configuration from classes in the Microsoft.Extensions.Configuration namespace to be to be accessed through a user-defined model with strongly typed interfaces. Disposable A base class for disposable objects. PathAttribute Defines an attribute used to indicate the path to the configuration value(s) underlying a class or individual property. PropertyDef The definition of a property of a configuration object. ReadOnlyAttribute An attribute that can be used to indicate that a property (especially arrays and dictionaries) should be treated as read-only. ServiceCollectionExtensions Extensions to the Microsoft.Extensions.DependencyInjection.IServiceCollection type allowing configuration objects to be registered. Interfaces IConfigurationCollection<TElement> Represents a collection of values stored in a property. IConfigurationDictionary<TElement> Defines a dictionary containing configurtation items and keyed on the element name. IConfigurationObject The interface from which all configuration objects are derived. Enums PathIs An enumeration of the ways in which the string supplied to the PathAttribute attribute can be used to create a full path. StructuralElementKind Specifies the ways in which a property can be used to represent structural elements."
  },
  "api/OpenCollar.Extensions.Configuration.IConfigurationObject.html": {
    "href": "api/OpenCollar.Extensions.Configuration.IConfigurationObject.html",
    "title": "Interface IConfigurationObject | API Documentation",
    "keywords": "Interface IConfigurationObject The interface from which all configuration objects are derived. Inherited Members System.IDisposable.Dispose() System.ComponentModel.INotifyPropertyChanged.PropertyChanged Namespace : OpenCollar.Extensions.Configuration Assembly : OpenCollar.Extensions.Configuration.dll Syntax public interface IConfigurationObject : IDisposable, INotifyPropertyChanged Properties | Improve this Doc View Source IsDirty Gets a value indicating whether this object has any properties with unsaved changes. Declaration bool IsDirty { get; } Property Value Type Description System.Boolean true if this object has any properties with unsaved changes; otherwise, false . | Improve this Doc View Source PropertyDef Gets the definition of this property object. Declaration PropertyDef PropertyDef { get; } Property Value Type Description PropertyDef The definition of this property object. Methods | Improve this Doc View Source Reload() Loads all of the properties from the configuration sources, overwriting any unsaved changes. Declaration void Reload() | Improve this Doc View Source Save() Saves this current values for each property back to the configuration sources. Declaration void Save()"
  }
}